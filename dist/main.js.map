{"mappings":";;AAAA;AAEA,MAAM,6BAAQ,IAAI,CAAA,GAAA,+BAAU,EAAE;IAC5B,WAAW;IACX,WAAW;IACX,cAAc;IACd,eAAe;IACf,OAAO;IACP,sBAAsB,IAAI;IAC1B,cAAc,KAAK;IACnB,eAAe;AAKjB;AAGC,SAAS,aAAa,CAAC,WAAmB,gBAAgB,CAAC,SAAS,IAAM,2BAAK,cAAc,CAAC;QAAE,OAAO;IAAM;AAC7G,SAAS,aAAa,CAAC,gBAAwB,gBAAgB,CAAC,SAAS,IAAM,2BAAK,WAAW;AAGhG,2BAAK,cAAc,GAAG,IAAI,CAAC,CAAC,OAAc;IACxC,QAAQ,GAAG,CAAC;IAEZ,yCAAyC;IAEzC,sEAAsE;IACtE,KAAK,UAAU;AACjB","sources":["src/index.ts"],"sourcesContent":["import {UserManager} from 'oidc-client-ts'\n\nconst user =  new UserManager({\n  authority: 'https://dev-18xi1sx5.au.auth0.com', // The Cricket Australia Auth URL (Gigya)\n  client_id: 'whlnBxWXjJ30x8EnxEEK2gt1jk1j6hGe', // The Client ID for the app registered against Gigya\n  redirect_uri: 'http://localhost:1234', // The URL we want to return to once authenticated via Gigya\n  response_type: 'code', // This ensures this request is PKCE\n  scope: 'openid', // openid is the only scope we will have access to\n  filterProtocolClaims: true,\n  loadUserInfo: false,\n  response_mode: 'query', // Used to make sure response_type: 'code' works as expected\n  // extraQueryParams: { // Any extra parameters to send to the /authorize request. If we are prefilling information, this is where we can pass the information through.\n  //   registrationCode: \"/afl/register/{registrationCode}\",\n  //   registrationExternalId: \"/afl/register/{registrationCode}/participant/{participantId}/external-id\"\n  // },\n});\n\n\n(document.querySelector('#signin') as any).addEventListener('click', () => user.signinRedirect({ state: '1234'}));\n(document.querySelector('#signinpopup') as any).addEventListener('click', () => user.signinPopup());\n\n\nuser.signinCallback().then((user: any) => {\n  console.log(user);\n\n  // Call Rebound API with user.profile.sub\n\n  // On successful request, we could remove the user from sessionStorage\n  user.removeUser()\n});"],"names":[],"version":3,"file":"main.js.map"}