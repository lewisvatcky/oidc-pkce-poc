{"mappings":"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,O,c;A,I,mB,O,wB;A,I,oB,O,mB;A,I,e,O,c;A,I,e,O,S,C,c;A,I,W,C,Q,M;I,I,I,Q,I,U,Q,M;Q,K,G,C,K;Q,Y,I;I;A;A,I,c,C,I,M,Q,O;I,I,Q,O,S,Y,O,S,Y;Q,K,I,O,kB,M,I,C,a,I,C,I,Q,Q,Q,U,I,K;Y,K,I,I,C,I;Y,Y,C,C,O,iB,M,I,K,K,U;Q;I,C;I,O;A;A,I,U,C,K,Y,S,C,S,O,I,G,S,a,Q,C,C,E,Y,sE;I,iE;I,sE;I,qE;I,c,C,O,C,I,U,G,U,Q,W;Q,O;Q,Y,I;I,K,M,E,I,A;A,I,e,C,M,Y,U,C,G,c;Q,O,I;I,I;A,e;AE7BA,IAAA,cAAA,CAAA;AAAA,SAAA,aAAA;IAAA,mBAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,eAAA,IAAA;IAAA,cAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,KAAA,IAAA;IAAA,QAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,YAAA,IAAA;IAAA,yBAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,aAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,OAAA,IAAA;IAAA,MAAA,IAAA;IAAA,aAAA,IAAA;IAAA,0BAAA,IAAA;IAAA,SAAA,IAAA;IAAA,sBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;A,2B;ACAA,IAAA,cAAqB,QAArB,QAAA;AACA,IAAA,gBAAmB,QAAnB,QAAA;AACA,IAAA,oBAAmB,QAAnB,QAAA;AACA,IAAA,kBAAiB,QAAjB,QAAA;A,sB;ACYA,IAAM,YAAqB;IACvB,OAAO,IAAM,KADU;IAEvB,MAAM,IAAM,KADC;IAEb,MAAM,IAAM,KADA;IAEZ,OAAO,IAAM,KADD;AAEhB;AAEA,IAAI;AACJ,IAAI;AAOG,IAAK,MAAL,AAAA,aAAA,GAAA,CAAA,CAAKA,OAAL;IACHA,IAAAA,CAAAA,IAAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,QAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,OAAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-65aa7d60d092a1cb.js","dist/main.js","dist/src/index.ts","node_modules/oidc-client-ts/dist/umd/oidc-client-ts.js","node_modules/oidc-client-ts/src/index.ts","node_modules/oidc-client-ts/src/utils/CryptoUtils.ts","node_modules/oidc-client-ts/src/utils/Logger.ts","node_modules/oidc-client-ts/src/utils/Event.ts","node_modules/oidc-client-ts/src/utils/JwtUtils.ts","node_modules/oidc-client-ts/src/utils/PopupUtils.ts","node_modules/oidc-client-ts/src/utils/Timer.ts","node_modules/oidc-client-ts/src/utils/UrlUtils.ts","node_modules/oidc-client-ts/src/errors/ErrorResponse.ts","node_modules/oidc-client-ts/src/errors/ErrorTimeout.ts","node_modules/oidc-client-ts/src/AccessTokenEvents.ts","node_modules/oidc-client-ts/src/CheckSessionIFrame.ts","node_modules/oidc-client-ts/src/InMemoryWebStorage.ts","node_modules/oidc-client-ts/src/JsonService.ts","node_modules/oidc-client-ts/src/MetadataService.ts","node_modules/oidc-client-ts/src/WebStorageStateStore.ts","node_modules/oidc-client-ts/src/OidcClientSettings.ts","node_modules/oidc-client-ts/src/UserInfoService.ts","node_modules/oidc-client-ts/src/TokenClient.ts","node_modules/oidc-client-ts/src/ResponseValidator.ts","node_modules/oidc-client-ts/src/State.ts","node_modules/oidc-client-ts/src/SigninState.ts","node_modules/oidc-client-ts/src/SigninRequest.ts","node_modules/oidc-client-ts/src/SigninResponse.ts","node_modules/oidc-client-ts/src/SignoutRequest.ts","node_modules/oidc-client-ts/src/SignoutResponse.ts","node_modules/oidc-client-ts/src/ClaimsService.ts","node_modules/oidc-client-ts/src/OidcClient.ts","node_modules/oidc-client-ts/src/SessionMonitor.ts","node_modules/oidc-client-ts/src/User.ts","node_modules/oidc-client-ts/src/navigators/AbstractChildWindow.ts","node_modules/oidc-client-ts/src/UserManagerSettings.ts","node_modules/oidc-client-ts/src/navigators/IFrameWindow.ts","node_modules/oidc-client-ts/src/navigators/IFrameNavigator.ts","node_modules/oidc-client-ts/src/navigators/PopupWindow.ts","node_modules/oidc-client-ts/src/navigators/PopupNavigator.ts","node_modules/oidc-client-ts/src/navigators/RedirectNavigator.ts","node_modules/oidc-client-ts/src/UserManagerEvents.ts","node_modules/oidc-client-ts/src/SilentRenewService.ts","node_modules/oidc-client-ts/src/RefreshState.ts","node_modules/oidc-client-ts/src/UserManager.ts","node_modules/oidc-client-ts/package.json","node_modules/oidc-client-ts/src/Version.ts","node_modules/crypto-js/core.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/crypto-js/sha256.js","node_modules/crypto-js/enc-base64.js","node_modules/crypto-js/enc-utf8.js","node_modules/jwt-decode/build/jwt-decode.esm.js","node_modules/jwt-decode/lib/atob.js","node_modules/jwt-decode/lib/base64_url_decode.js","node_modules/jwt-decode/lib/index.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"dc9ee53a32d56147\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"import {UserManager} from 'oidc-client-ts'\n\nconst user =  new UserManager({\n  authority: 'https://dev-18xi1sx5.au.auth0.com', // The Cricket Australia Auth URL (Gigya)\n  client_id: 'whlnBxWXjJ30x8EnxEEK2gt1jk1j6hGe', // The Client ID for the app registered against Gigya\n  redirect_uri: 'http://localhost:1234', // The URL we want to return to once authenticated via Gigya\n  response_type: 'code', // This ensures this request is PKCE\n  scope: 'openid', // openid is the only scope we will have access to\n  filterProtocolClaims: true,\n  loadUserInfo: false,\n  response_mode: 'query', // Used to make sure response_type: 'code' works as expected\n  // extraQueryParams: { // Any extra parameters to send to the /authorize request. If we are prefilling information, this is where we can pass the information through.\n  //   registrationCode: \"/afl/register/{registrationCode}\",\n  //   registrationExternalId: \"/afl/register/{registrationCode}/participant/{participantId}/external-id\"\n  // },\n});\n\n\n(document.querySelector('#signin') as any).addEventListener('click', () => user.signinRedirect({ state: '1234'}));\n(document.querySelector('#signinpopup') as any).addEventListener('click', () => user.signinPopup());\n\n\nuser.signinCallback().then((user: any) => {\n  console.log(user);\n\n  // Call Rebound API with user.profile.sub\n\n  // On successful request, we could remove the user from sessionStorage\n  user.removeUser()\n});",null,"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nexport { ErrorResponse, ErrorTimeout } from \"./errors\";\nexport type { IFrameWindowParams, PopupWindowParams, RedirectParams } from \"./navigators\";\nexport { Log, Logger } from \"./utils\";\nexport type { ILogger, PopupWindowFeatures } from \"./utils\";\nexport type { OidcAddressClaim, OidcStandardClaims, IdTokenClaims, JwtClaims } from \"./Claims\";\n\nexport { AccessTokenEvents } from \"./AccessTokenEvents\";\nexport type { AccessTokenCallback } from \"./AccessTokenEvents\";\nexport { CheckSessionIFrame } from \"./CheckSessionIFrame\";\nexport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\nexport type { AsyncStorage } from \"./AsyncStorage\";\nexport { MetadataService } from \"./MetadataService\";\nexport * from \"./OidcClient\";\nexport { OidcClientSettingsStore } from \"./OidcClientSettings\";\nexport type { OidcClientSettings, SigningKey, ExtraHeader } from \"./OidcClientSettings\";\nexport type { OidcMetadata } from \"./OidcMetadata\";\nexport { SessionMonitor } from \"./SessionMonitor\";\nexport type { SessionStatus } from \"./SessionStatus\";\nexport type { SigninRequest, SigninRequestArgs } from \"./SigninRequest\";\nexport { SigninResponse } from \"./SigninResponse\";\nexport { SigninState } from \"./SigninState\";\nexport type { SignoutRequest, SignoutRequestArgs } from \"./SignoutRequest\";\nexport { SignoutResponse } from \"./SignoutResponse\";\nexport { State } from \"./State\";\nexport type { StateStore } from \"./StateStore\";\nexport { User } from \"./User\";\nexport type { UserProfile } from \"./User\";\nexport * from \"./UserManager\";\nexport type {\n    UserManagerEvents,\n    SilentRenewErrorCallback,\n    UserLoadedCallback,\n    UserSessionChangedCallback,\n    UserSignedInCallback,\n    UserSignedOutCallback,\n    UserUnloadedCallback,\n} from \"./UserManagerEvents\";\nexport { UserManagerSettingsStore } from \"./UserManagerSettings\";\nexport type { UserManagerSettings } from \"./UserManagerSettings\";\nexport { Version } from \"./Version\";\nexport { WebStorageStateStore } from \"./WebStorageStateStore\";\n","import CryptoJS from \"crypto-js/core.js\";\nimport sha256 from \"crypto-js/sha256.js\";\nimport Base64 from \"crypto-js/enc-base64.js\";\nimport Utf8 from \"crypto-js/enc-utf8.js\";\n\nimport { Logger } from \"./Logger\";\n\nconst UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\n\n/**\n * @internal\n */\nexport class CryptoUtils {\n    private static _randomWord(): number {\n        return CryptoJS.lib.WordArray.random(1).words[0];\n    }\n\n    /**\n     * Generates RFC4122 version 4 guid\n     */\n    public static generateUUIDv4(): string {\n        const uuid = UUID_V4_TEMPLATE.replace(/[018]/g, c =>\n            (+c ^ CryptoUtils._randomWord() & 15 >> +c / 4).toString(16),\n        );\n        return uuid.replace(/-/g, \"\");\n    }\n\n    /**\n     * PKCE: Generate a code verifier\n     */\n    public static generateCodeVerifier(): string {\n        return CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4();\n    }\n\n    /**\n     * PKCE: Generate a code challenge\n     */\n    public static generateCodeChallenge(code_verifier: string): string {\n        try {\n            const hashed = sha256(code_verifier);\n            return Base64.stringify(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n        }\n        catch (err) {\n            Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n            throw err;\n        }\n    }\n\n    /**\n     * Generates a base64-encoded string for a basic auth header\n     */\n    public static generateBasicAuth(client_id: string, client_secret: string): string {\n        const basicAuth = Utf8.parse([client_id, client_secret].join(\":\"));\n        return Base64.stringify(basicAuth);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * Native interface\n *\n * @public\n */\nexport interface ILogger {\n    debug(...args: unknown[]): void;\n    info(...args: unknown[]): void;\n    warn(...args: unknown[]): void;\n    error(...args: unknown[]): void;\n}\n\nconst nopLogger: ILogger = {\n    debug: () => undefined,\n    info: () => undefined,\n    warn: () => undefined,\n    error: () => undefined,\n};\n\nlet level: number;\nlet logger: ILogger;\n\n/**\n * Log levels\n *\n * @public\n */\nexport enum Log {\n    NONE,\n    ERROR,\n    WARN,\n    INFO,\n    DEBUG\n}\n\n/**\n * Log manager\n *\n * @public\n */\nexport namespace Log { // eslint-disable-line @typescript-eslint/no-namespace\n    export function reset(): void {\n        level = Log.INFO;\n        logger = nopLogger;\n    }\n\n    export function setLevel(value: Log): void {\n        if (!(Log.NONE <= value && value <= Log.DEBUG)) {\n            throw new Error(\"Invalid log level\");\n        }\n        level = value;\n    }\n\n    export function setLogger(value: ILogger): void {\n        logger = value;\n    }\n}\n\n/**\n * Internal logger instance\n *\n * @public\n */\nexport class Logger {\n    private _method?: string;\n    public constructor(private _name: string) {}\n\n    public debug(...args: unknown[]): void {\n        if (level >= Log.DEBUG) {\n            logger.debug(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public info(...args: unknown[]): void {\n        if (level >= Log.INFO) {\n            logger.info(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public warn(...args: unknown[]): void {\n        if (level >= Log.WARN) {\n            logger.warn(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public error(...args: unknown[]): void {\n        if (level >= Log.ERROR) {\n            logger.error(Logger._format(this._name, this._method), ...args);\n        }\n    }\n\n    public throw(err: Error): never {\n        this.error(err);\n        throw err;\n    }\n\n    public create(method: string): Logger {\n        const methodLogger: Logger = Object.create(this);\n        methodLogger._method = method;\n        methodLogger.debug(\"begin\");\n        return methodLogger;\n    }\n\n    public static createStatic(name: string, staticMethod: string): Logger {\n        const staticLogger = new Logger(`${name}.${staticMethod}`);\n        staticLogger.debug(\"begin\");\n        return staticLogger;\n    }\n\n    private static _format(name: string, method?: string) {\n        const prefix = `[${name}]`;\n        return method ? `${prefix} ${method}:` : prefix;\n    }\n\n    // helpers for static class methods\n    public static debug(name: string, ...args: unknown[]): void {\n        if (level >= Log.DEBUG) {\n            logger.debug(Logger._format(name), ...args);\n        }\n    }\n    public static info(name: string, ...args: unknown[]): void {\n        if (level >= Log.INFO) {\n            logger.info(Logger._format(name), ...args);\n        }\n    }\n    public static warn(name: string, ...args: unknown[]): void {\n        if (level >= Log.WARN) {\n            logger.warn(Logger._format(name), ...args);\n        }\n    }\n    public static error(name: string, ...args: unknown[]): void {\n        if (level >= Log.ERROR) {\n            logger.error(Logger._format(name), ...args);\n        }\n    }\n}\n\nLog.reset();\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./Logger\";\n\n/**\n * @internal\n */\nexport type Callback<EventType extends unknown[]> = (...ev: EventType) => (Promise<void> | void);\n\n/**\n * @internal\n */\nexport class Event<EventType extends unknown[]> {\n    protected readonly _logger = new Logger(`Event('${this._name}')`);\n\n    private _callbacks: Array<Callback<EventType>> = [];\n\n    public constructor(protected readonly _name: string) {}\n\n    public addHandler(cb: Callback<EventType>): () => void {\n        this._callbacks.push(cb);\n        return () => this.removeHandler(cb);\n    }\n\n    public removeHandler(cb: Callback<EventType>): void {\n        const idx = this._callbacks.lastIndexOf(cb);\n        if (idx >= 0) {\n            this._callbacks.splice(idx, 1);\n        }\n    }\n\n    public raise(...ev: EventType): void {\n        this._logger.debug(\"raise:\", ...ev);\n        for (const cb of this._callbacks) {\n            void cb(...ev);\n        }\n    }\n}\n","import jwt_decode from \"jwt-decode\";\n\nimport { Logger } from \"./Logger\";\nimport type { JwtClaims } from \"../Claims\";\n\n/**\n * @internal\n */\nexport class JwtUtils {\n    // IMPORTANT: doesn't validate the token\n    public static decode(token: string): JwtClaims {\n        try {\n            return jwt_decode<JwtClaims>(token);\n        }\n        catch (err) {\n            Logger.error(\"JwtUtils.decode\", err);\n            throw err;\n        }\n    }\n}\n","/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open#window_features\n *\n * @public\n */\nexport interface PopupWindowFeatures {\n    left?: number;\n    top?: number;\n    width?: number;\n    height?: number;\n    menubar?: boolean | string;\n    toolbar?: boolean | string;\n    location?: boolean | string;\n    status?: boolean | string;\n    resizable?: boolean | string;\n    scrollbars?: boolean | string;\n\n    [k: string]: boolean | string | number | undefined;\n}\n\nexport class PopupUtils {\n    /**\n     * Populates a map of window features with a placement centered in front of\n     * the current window. If no explicit width is given, a default value is\n     * binned into [800, 720, 600, 480, 360] based on the current window's width.\n     */\n    static center({ ...features }: PopupWindowFeatures): PopupWindowFeatures {\n        if (features.width == null)\n            features.width = [800, 720, 600, 480].find(width => width <= window.outerWidth / 1.618) ?? 360;\n        features.left ??= Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n        if (features.height != null)\n            features.top ??= Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n        return features;\n    }\n\n    static serialize(features: PopupWindowFeatures): string {\n        return Object.entries(features)\n            .filter(([, value]) => value != null)\n            .map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value as string : value ? \"yes\" : \"no\"}`)\n            .join(\",\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Event } from \"./Event\";\nimport { Logger } from \"./Logger\";\n\n/**\n * @internal\n */\nexport class Timer extends Event<[void]> {\n    protected readonly _logger = new Logger(`Timer('${this._name}')`);\n    private _timerHandle: ReturnType<typeof setInterval> | null = null;\n    private _expiration = 0;\n\n    // get the time\n    public static getEpochTime(): number {\n        return Math.floor(Date.now() / 1000);\n    }\n\n    public init(durationInSeconds: number): void {\n        const logger = this._logger.create(\"init\");\n        durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n        const expiration = Timer.getEpochTime() + durationInSeconds;\n        if (this.expiration === expiration && this._timerHandle) {\n            // no need to reinitialize to same expiration, so bail out\n            logger.debug(\"skipping since already initialized for expiration at\", this.expiration);\n            return;\n        }\n\n        this.cancel();\n\n        logger.debug(\"using duration\", durationInSeconds);\n        this._expiration = expiration;\n\n        // we're using a fairly short timer and then checking the expiration in the\n        // callback to handle scenarios where the browser device sleeps, and then\n        // the timers end up getting delayed.\n        const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n        this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1000);\n    }\n\n    public get expiration(): number {\n        return this._expiration;\n    }\n\n    public cancel(): void {\n        this._logger.create(\"cancel\");\n        if (this._timerHandle) {\n            clearInterval(this._timerHandle);\n            this._timerHandle = null;\n        }\n    }\n\n    protected _callback = (): void => {\n        const diff = this._expiration - Timer.getEpochTime();\n        this._logger.debug(\"timer completes in\", diff);\n\n        if (this._expiration <= Timer.getEpochTime()) {\n            this.cancel();\n            super.raise();\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * @internal\n */\nexport class UrlUtils {\n    public static readParams(url: string, responseMode: \"query\" | \"fragment\" = \"query\"): URLSearchParams {\n        if (!url) throw new TypeError(\"Invalid URL\");\n        const parsedUrl = new URL(url, window.location.origin);\n        const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n        return new URLSearchParams(params.slice(1));\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\n\n/**\n * Error class thrown in case of an authentication error.\n *\n * See https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n *\n * @public\n */\nexport class ErrorResponse extends Error {\n    /** Marker to detect class: \"ErrorResponse\" */\n    public readonly name: string = \"ErrorResponse\";\n\n    /** An error code string that can be used to classify the types of errors that occur and to respond to errors. */\n    public readonly error: string | null;\n    /** additional information that can help a developer identify the cause of the error.*/\n    public readonly error_description: string | null;\n    /**\n     * URI identifying a human-readable web page with information about the error, used to provide the client\n       developer with additional information about the error.\n    */\n    public readonly error_uri: string | null;\n\n    /** custom state data set during the initial signin request */\n    public state?: unknown;\n\n    public readonly session_state: string | null;\n\n    public constructor(\n        args: {\n            error?: string | null; error_description?: string | null; error_uri?: string | null;\n            userState?: unknown; session_state?: string | null;\n        },\n        /** The x-www-form-urlencoded request body sent to the authority server */\n        public readonly form?: URLSearchParams,\n    ) {\n        super(args.error_description || args.error || \"\");\n\n        if (!args.error) {\n            Logger.error(\"ErrorResponse\", \"No error passed\");\n            throw new Error(\"No error passed\");\n        }\n\n        this.error = args.error;\n        this.error_description = args.error_description ?? null;\n        this.error_uri = args.error_uri ?? null;\n\n        this.state = args.userState;\n        this.session_state = args.session_state ?? null;\n    }\n}\n","// Copyright (C) 2021 AuthTS Contributors\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * Error class thrown in case of network timeouts (e.g IFrame time out).\n *\n * @public\n */\nexport class ErrorTimeout extends Error {\n    /** Marker to detect class: \"ErrorTimeout\" */\n    public readonly name: string = \"ErrorTimeout\";\n\n    public constructor(message?: string) {\n        super(message);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport type AccessTokenCallback = (...ev: unknown[]) => (Promise<void> | void);\n\n/**\n * @public\n */\nexport class AccessTokenEvents {\n    protected readonly _logger = new Logger(\"AccessTokenEvents\");\n\n    private readonly _expiringTimer = new Timer(\"Access token expiring\");\n    private readonly _expiredTimer = new Timer(\"Access token expired\");\n    private readonly _expiringNotificationTimeInSeconds: number;\n\n    public constructor(args: { expiringNotificationTimeInSeconds: number }) {\n        this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n    }\n\n    public load(container: User): void {\n        const logger = this._logger.create(\"load\");\n        // only register events if there's an access token and it has an expiration\n        if (container.access_token && container.expires_in !== undefined) {\n            const duration = container.expires_in;\n            logger.debug(\"access token present, remaining duration:\", duration);\n\n            if (duration > 0) {\n                // only register expiring if we still have time\n                let expiring = duration - this._expiringNotificationTimeInSeconds;\n                if (expiring <= 0) {\n                    expiring = 1;\n                }\n\n                logger.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n                this._expiringTimer.init(expiring);\n            }\n            else {\n                logger.debug(\"canceling existing expiring timer because we're past expiration.\");\n                this._expiringTimer.cancel();\n            }\n\n            // if it's negative, it will still fire\n            const expired = duration + 1;\n            logger.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n            this._expiredTimer.init(expired);\n        }\n        else {\n            this._expiringTimer.cancel();\n            this._expiredTimer.cancel();\n        }\n    }\n\n    public unload(): void {\n        this._logger.debug(\"unload: canceling existing access token timers\");\n        this._expiringTimer.cancel();\n        this._expiredTimer.cancel();\n    }\n\n    /**\n     * Add callback: Raised prior to the access token expiring.\n     */\n    public addAccessTokenExpiring(cb: AccessTokenCallback): () => void {\n        return this._expiringTimer.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised prior to the access token expiring.\n     */\n    public removeAccessTokenExpiring(cb: AccessTokenCallback): void {\n        this._expiringTimer.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised after the access token has expired.\n     */\n    public addAccessTokenExpired(cb: AccessTokenCallback): () => void {\n        return this._expiredTimer.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised after the access token has expired.\n     */\n    public removeAccessTokenExpired(cb: AccessTokenCallback): void {\n        this._expiredTimer.removeHandler(cb);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\n\n/**\n * @internal\n */\nexport class CheckSessionIFrame {\n    private readonly _logger = new Logger(\"CheckSessionIFrame\");\n    private _frame_origin: string;\n    private _frame: HTMLIFrameElement;\n    private _timer: ReturnType<typeof setInterval> | null = null;\n    private _session_state: string | null = null;\n\n    public constructor(\n        private _callback: () => Promise<void>,\n        private _client_id: string,\n        url: string,\n        private _intervalInSeconds: number,\n        private _stopOnError: boolean,\n    ) {\n        const parsedUrl = new URL(url);\n        this._frame_origin = parsedUrl.origin;\n\n        this._frame = window.document.createElement(\"iframe\");\n\n        // shotgun approach\n        this._frame.style.visibility = \"hidden\";\n        this._frame.style.position = \"fixed\";\n        this._frame.style.left = \"-1000px\";\n        this._frame.style.top = \"0\";\n        this._frame.width = \"0\";\n        this._frame.height = \"0\";\n        this._frame.src = parsedUrl.href;\n    }\n\n    public load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this._frame.onload = () => {\n                resolve();\n            };\n\n            window.document.body.appendChild(this._frame);\n            window.addEventListener(\"message\", this._message, false);\n        });\n    }\n\n    private _message = (e: MessageEvent<string>): void => {\n        if (e.origin === this._frame_origin &&\n            e.source === this._frame.contentWindow\n        ) {\n            if (e.data === \"error\") {\n                this._logger.error(\"error message from check session op iframe\");\n                if (this._stopOnError) {\n                    this.stop();\n                }\n            }\n            else if (e.data === \"changed\") {\n                this._logger.debug(\"changed message from check session op iframe\");\n                this.stop();\n                void this._callback();\n            }\n            else {\n                this._logger.debug(e.data + \" message from check session op iframe\");\n            }\n        }\n    };\n\n    public start(session_state: string): void {\n        if (this._session_state === session_state) {\n            return;\n        }\n\n        this._logger.create(\"start\");\n\n        this.stop();\n\n        this._session_state = session_state;\n\n        const send = () => {\n            if (!this._frame.contentWindow || !this._session_state) {\n                return;\n            }\n\n            this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n        };\n\n        // trigger now\n        send();\n\n        // and setup timer\n        this._timer = setInterval(send, this._intervalInSeconds * 1000);\n    }\n\n    public stop(): void {\n        this._logger.create(\"stop\");\n        this._session_state = null;\n\n        if (this._timer) {\n\n            clearInterval(this._timer);\n            this._timer = null;\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\n\n/**\n * @public\n */\nexport class InMemoryWebStorage implements Storage {\n    private readonly _logger = new Logger(\"InMemoryWebStorage\");\n    private _data: Record<string, string> = {};\n\n    public clear(): void {\n        this._logger.create(\"clear\");\n        this._data = {};\n    }\n\n    public getItem(key: string): string {\n        this._logger.create(`getItem('${key}')`);\n        return this._data[key];\n    }\n\n    public setItem(key: string, value: string): void {\n        this._logger.create(`setItem('${key}')`);\n        this._data[key] = value;\n    }\n\n    public removeItem(key: string): void {\n        this._logger.create(`removeItem('${key}')`);\n        delete this._data[key];\n    }\n\n    public get length(): number {\n        return Object.getOwnPropertyNames(this._data).length;\n    }\n\n    public key(index: number): string {\n        return Object.getOwnPropertyNames(this._data)[index];\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { ErrorResponse, ErrorTimeout } from \"./errors\";\nimport type { ExtraHeader } from \"./OidcClientSettings\";\nimport { Logger } from \"./utils\";\n\n/**\n * @internal\n */\nexport type JwtHandler = (text: string) => Promise<Record<string, unknown>>;\n\n/**\n * @internal\n */\nexport interface GetJsonOpts {\n    token?: string;\n    credentials?: RequestCredentials;\n}\n\n/**\n * @internal\n */\nexport interface PostFormOpts {\n    body: URLSearchParams;\n    basicAuth?: string;\n    timeoutInSeconds?: number;\n    initCredentials?: \"same-origin\" | \"include\" | \"omit\";\n}\n\n/**\n * @internal\n */\nexport class JsonService {\n    private readonly _logger = new Logger(\"JsonService\");\n\n    private _contentTypes: string[] = [];\n\n    public constructor(\n        additionalContentTypes: string[] = [],\n        private _jwtHandler: JwtHandler | null = null,\n        private _extraHeaders: Record<string, ExtraHeader> = {},\n    ) {\n        this._contentTypes.push(...additionalContentTypes, \"application/json\");\n        if (_jwtHandler) {\n            this._contentTypes.push(\"application/jwt\");\n        }\n    }\n\n    protected async fetchWithTimeout(input: RequestInfo, init: RequestInit & { timeoutInSeconds?: number } = {}) {\n        const { timeoutInSeconds, ...initFetch } = init;\n        if (!timeoutInSeconds) {\n            return await fetch(input, initFetch);\n        }\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1000);\n\n        try {\n            const response = await fetch(input, {\n                ...init,\n                signal: controller.signal,\n            });\n            return response;\n        }\n        catch (err) {\n            if (err instanceof DOMException && err.name === \"AbortError\") {\n                throw new ErrorTimeout(\"Network timed out\");\n            }\n            throw err;\n        }\n        finally {\n            clearTimeout(timeoutId);\n        }\n    }\n\n    public async getJson(url: string, {\n        token,\n        credentials,\n    }: GetJsonOpts = {}): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"getJson\");\n        const headers: HeadersInit = {\n            \"Accept\": this._contentTypes.join(\", \"),\n        };\n        if (token) {\n            logger.debug(\"token passed, setting Authorization header\");\n            headers[\"Authorization\"] = \"Bearer \" + token;\n        }\n\n        this.appendExtraHeaders(headers);\n\n        let response: Response;\n        try {\n            logger.debug(\"url:\", url);\n            response = await this.fetchWithTimeout(url, { method: \"GET\", headers, credentials });\n        }\n        catch (err) {\n            logger.error(\"Network Error\");\n            throw err;\n        }\n\n        logger.debug(\"HTTP response received, status\", response.status);\n        const contentType = response.headers.get(\"Content-Type\");\n        if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n            logger.throw(new Error(`Invalid response Content-Type: ${(contentType ?? \"undefined\")}, from URL: ${url}`));\n        }\n        if (response.ok && this._jwtHandler && contentType?.startsWith(\"application/jwt\")) {\n            return await this._jwtHandler(await response.text());\n        }\n        let json: Record<string, unknown>;\n        try {\n            json = await response.json();\n        }\n        catch (err) {\n            logger.error(\"Error parsing JSON response\", err);\n            if (response.ok) throw err;\n            throw new Error(`${response.statusText} (${response.status})`);\n        }\n        if (!response.ok) {\n            logger.error(\"Error from server:\", json);\n            if (json.error) {\n                throw new ErrorResponse(json);\n            }\n            throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n        }\n        return json;\n    }\n\n    public async postForm(url: string, {\n        body,\n        basicAuth,\n        timeoutInSeconds,\n        initCredentials,\n    }: PostFormOpts): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"postForm\");\n        const headers: HeadersInit = {\n            \"Accept\": this._contentTypes.join(\", \"),\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        };\n        if (basicAuth !== undefined) {\n            headers[\"Authorization\"] = \"Basic \" + basicAuth;\n        }\n\n        this.appendExtraHeaders(headers);\n\n        let response: Response;\n        try {\n            logger.debug(\"url:\", url);\n            response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n        }\n        catch (err) {\n            logger.error(\"Network error\");\n            throw err;\n        }\n\n        logger.debug(\"HTTP response received, status\", response.status);\n        const contentType = response.headers.get(\"Content-Type\");\n        if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n            throw new Error(`Invalid response Content-Type: ${(contentType ?? \"undefined\")}, from URL: ${url}`);\n        }\n\n        const responseText = await response.text();\n\n        let json: Record<string, unknown> = {};\n        if (responseText) {\n            try {\n                json = JSON.parse(responseText);\n            }\n            catch (err) {\n                logger.error(\"Error parsing JSON response\", err);\n                if (response.ok) throw err;\n                throw new Error(`${response.statusText} (${response.status})`);\n            }\n        }\n\n        if (!response.ok) {\n            logger.error(\"Error from server:\", json);\n            if (json.error) {\n                throw new ErrorResponse(json, body);\n            }\n            throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n        }\n\n        return json;\n    }\n\n    private appendExtraHeaders(\n        headers: Record<string, string>,\n    ): void {\n        const logger = this._logger.create(\"appendExtraHeaders\");\n        const customKeys = Object.keys(this._extraHeaders);\n        const protectedHeaders = [\n            \"authorization\",\n            \"accept\",\n            \"content-type\",\n        ];\n        if (customKeys.length === 0) {\n            return;\n        }\n        customKeys.forEach((headerName) => {\n            if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n                logger.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n                return;\n            }\n            const content = (typeof this._extraHeaders[headerName] === \"function\") ?\n                (this._extraHeaders[headerName] as ()=>string)() :\n                this._extraHeaders[headerName];\n            if (content && content !== \"\") {\n                headers[headerName] = content as string;\n            }\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { OidcClientSettingsStore, SigningKey } from \"./OidcClientSettings\";\nimport type { OidcMetadata } from \"./OidcMetadata\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\n */\nexport class MetadataService {\n    private readonly _logger = new Logger(\"MetadataService\");\n    private readonly _jsonService;\n\n    // cache\n    private _metadataUrl: string;\n    private _signingKeys: SigningKey[] | null = null;\n    private _metadata: Partial<OidcMetadata> | null = null;\n    private _fetchRequestCredentials: RequestCredentials | undefined;\n\n    public constructor(private readonly _settings: OidcClientSettingsStore) {\n        this._metadataUrl = this._settings.metadataUrl;\n        this._jsonService = new JsonService(\n            [\"application/jwk-set+json\"],\n            null,\n            this._settings.extraHeaders,\n        );\n        if (this._settings.signingKeys) {\n            this._logger.debug(\"using signingKeys from settings\");\n            this._signingKeys = this._settings.signingKeys;\n        }\n\n        if (this._settings.metadata) {\n            this._logger.debug(\"using metadata from settings\");\n            this._metadata = this._settings.metadata;\n        }\n\n        if (this._settings.fetchRequestCredentials) {\n            this._logger.debug(\"using fetchRequestCredentials from settings\");\n            this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n        }\n    }\n\n    public resetSigningKeys(): void {\n        this._signingKeys = null;\n    }\n\n    public async getMetadata(): Promise<Partial<OidcMetadata>> {\n        const logger = this._logger.create(\"getMetadata\");\n        if (this._metadata) {\n            logger.debug(\"using cached values\");\n            return this._metadata;\n        }\n\n        if (!this._metadataUrl) {\n            logger.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n            throw null;\n        }\n\n        logger.debug(\"getting metadata from\", this._metadataUrl);\n        const metadata = await this._jsonService.getJson(this._metadataUrl, { credentials: this._fetchRequestCredentials });\n\n        logger.debug(\"merging remote JSON with seed metadata\");\n        this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n        return this._metadata;\n    }\n\n    public getIssuer(): Promise<string> {\n        return this._getMetadataProperty(\"issuer\") as Promise<string>;\n    }\n\n    public getAuthorizationEndpoint(): Promise<string> {\n        return this._getMetadataProperty(\"authorization_endpoint\") as Promise<string>;\n    }\n\n    public getUserInfoEndpoint(): Promise<string> {\n        return this._getMetadataProperty(\"userinfo_endpoint\") as Promise<string>;\n    }\n\n    public getTokenEndpoint(optional: false): Promise<string>;\n    public getTokenEndpoint(optional?: true): Promise<string | undefined>;\n    public getTokenEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"token_endpoint\", optional) as Promise<string | undefined>;\n    }\n\n    public getCheckSessionIframe(): Promise<string | undefined> {\n        return this._getMetadataProperty(\"check_session_iframe\", true) as Promise<string | undefined>;\n    }\n\n    public getEndSessionEndpoint(): Promise<string | undefined> {\n        return this._getMetadataProperty(\"end_session_endpoint\", true) as Promise<string | undefined>;\n    }\n\n    public getRevocationEndpoint(optional: false): Promise<string>;\n    public getRevocationEndpoint(optional?: true): Promise<string | undefined>;\n    public getRevocationEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"revocation_endpoint\", optional) as Promise<string | undefined>;\n    }\n\n    public getKeysEndpoint(optional: false): Promise<string>;\n    public getKeysEndpoint(optional?: true): Promise<string | undefined>;\n    public getKeysEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"jwks_uri\", optional) as Promise<string | undefined>;\n    }\n\n    protected async _getMetadataProperty(name: keyof OidcMetadata, optional=false): Promise<string | boolean | string[] | undefined> {\n        const logger = this._logger.create(`_getMetadataProperty('${name}')`);\n\n        const metadata = await this.getMetadata();\n        logger.debug(\"resolved\");\n\n        if (metadata[name] === undefined) {\n            if (optional === true) {\n                logger.warn(\"Metadata does not contain optional property\");\n                return undefined;\n            }\n\n            logger.throw(new Error(\"Metadata does not contain property \" + name));\n        }\n\n        return metadata[name];\n    }\n\n    public async getSigningKeys(): Promise<SigningKey[] | null> {\n        const logger = this._logger.create(\"getSigningKeys\");\n        if (this._signingKeys) {\n            logger.debug(\"returning signingKeys from cache\");\n            return this._signingKeys;\n        }\n\n        const jwks_uri = await this.getKeysEndpoint(false);\n        logger.debug(\"got jwks_uri\", jwks_uri);\n\n        const keySet = await this._jsonService.getJson(jwks_uri);\n        logger.debug(\"got key set\", keySet);\n\n        if (!Array.isArray(keySet.keys)) {\n            logger.throw(new Error(\"Missing keys on keyset\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        this._signingKeys = keySet.keys;\n        return this._signingKeys;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport type { StateStore } from \"./StateStore\";\nimport type { AsyncStorage } from \"./AsyncStorage\";\n\n/**\n * @public\n */\nexport class WebStorageStateStore implements StateStore {\n    private readonly _logger = new Logger(\"WebStorageStateStore\");\n\n    private readonly _store: AsyncStorage | Storage;\n    private readonly _prefix: string;\n\n    public constructor({\n        prefix = \"oidc.\",\n        store = localStorage,\n    }: { prefix?: string; store?: AsyncStorage | Storage } = {}) {\n        this._store = store;\n        this._prefix = prefix;\n    }\n\n    public async set(key: string, value: string): Promise<void> {\n        this._logger.create(`set('${key}')`);\n\n        key = this._prefix + key;\n        await this._store.setItem(key, value);\n    }\n\n    public async get(key: string): Promise<string | null> {\n        this._logger.create(`get('${key}')`);\n\n        key = this._prefix + key;\n        const item = await this._store.getItem(key);\n        return item;\n    }\n\n    public async remove(key: string): Promise<string | null> {\n        this._logger.create(`remove('${key}')`);\n\n        key = this._prefix + key;\n        const item = await this._store.getItem(key);\n        await this._store.removeItem(key);\n        return item;\n    }\n\n    public async getAllKeys(): Promise<string[]> {\n        this._logger.create(\"getAllKeys\");\n        const len = await this._store.length;\n\n        const keys = [];\n        for (let index = 0; index < len; index++) {\n            const key = await this._store.key(index);\n            if (key && key.indexOf(this._prefix) === 0) {\n                keys.push(key.substr(this._prefix.length));\n            }\n        }\n        return keys;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { WebStorageStateStore } from \"./WebStorageStateStore\";\nimport type { OidcMetadata } from \"./OidcMetadata\";\nimport type { StateStore } from \"./StateStore\";\nimport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\n\nconst DefaultResponseType = \"code\";\nconst DefaultScope = \"openid\";\nconst DefaultClientAuthentication = \"client_secret_post\";\nconst DefaultResponseMode = \"query\";\nconst DefaultStaleStateAgeInSeconds = 60 * 15;\nconst DefaultClockSkewInSeconds = 60 * 5;\n\n/**\n * @public\n */\nexport type SigningKey = Record<string, string | string[]>;\n\n/**\n * @public\n */\nexport type ExtraHeader = string | (() => string);\n\n/**\n * The settings used to configure the {@link OidcClient}.\n *\n * @public\n */\nexport interface OidcClientSettings {\n    /** The URL of the OIDC/OAuth2 provider */\n    authority: string;\n    metadataUrl?: string;\n    /** Provide metadata when authority server does not allow CORS on the metadata endpoint */\n    metadata?: Partial<OidcMetadata>;\n    /** Can be used to seed or add additional values to the results of the discovery request */\n    metadataSeed?: Partial<OidcMetadata>;\n    /** Provide signingKeys when authority server does not allow CORS on the jwks uri */\n    signingKeys?: SigningKey[];\n\n    /** Your client application's identifier as registered with the OIDC/OAuth2 */\n    client_id: string;\n    client_secret?: string;\n    /** The type of response desired from the OIDC/OAuth2 provider (default: \"code\") */\n    response_type?: string;\n    /** The scope being requested from the OIDC/OAuth2 provider (default: \"openid\") */\n    scope?: string;\n    /** The redirect URI of your client application to receive a response from the OIDC/OAuth2 provider */\n    redirect_uri: string;\n    /** The OIDC/OAuth2 post-logout redirect URI */\n    post_logout_redirect_uri?: string;\n\n    /**\n     * Client authentication method that is used to authenticate when using the token endpoint (default: \"client_secret_post\")\n     * - \"client_secret_basic\": using the HTTP Basic authentication scheme\n     * - \"client_secret_post\": including the client credentials in the request body\n     *\n     * See https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\n     */\n    client_authentication?: \"client_secret_basic\" | \"client_secret_post\";\n\n    /** optional protocol param */\n    prompt?: string;\n    /** optional protocol param */\n    display?: string;\n    /** optional protocol param */\n    max_age?: number;\n    /** optional protocol param */\n    ui_locales?: string;\n    /** optional protocol param */\n    acr_values?: string;\n    /** optional protocol param */\n    resource?: string | string[];\n\n    /** optional protocol param (default: \"query\") */\n    response_mode?: \"query\" | \"fragment\";\n\n    /**\n     * Should optional OIDC protocol claims be removed from profile or specify the ones to be removed (default: true)\n     * When true, the following claims are removed by default: [\"nbf\", \"jti\", \"auth_time\", \"nonce\", \"acr\", \"amr\", \"azp\", \"at_hash\"]\n     * When specifying claims, the following claims are not allowed: [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"]\n    */\n    filterProtocolClaims?: boolean | string[];\n    /** Flag to control if additional identity data is loaded from the user info endpoint in order to populate the user's profile (default: false) */\n    loadUserInfo?: boolean;\n    /** Number (in seconds) indicating the age of state entries in storage for authorize requests that are considered abandoned and thus can be cleaned up (default: 900) */\n    staleStateAgeInSeconds?: number;\n\n    /** @deprecated Unused */\n    clockSkewInSeconds?: number;\n    /** @deprecated Unused */\n    userInfoJwtIssuer?: \"ANY\" | \"OP\" | string;\n\n    /**\n     * Indicates if objects returned from the user info endpoint as claims (e.g. `address`) are merged into the claims from the id token as a single object.\n     * Otherwise, they are added to an array as distinct objects for the claim type. (default: false)\n     */\n    mergeClaims?: boolean;\n\n    /**\n     * Storage object used to persist interaction state (default: window.localStorage, InMemoryWebStorage iff no window).\n     * E.g. `stateStore: new WebStorageStateStore({ store: window.localStorage })`\n     */\n    stateStore?: StateStore;\n\n    /**\n     * An object containing additional query string parameters to be including in the authorization request.\n     * E.g, when using Azure AD to obtain an access token an additional resource parameter is required. extraQueryParams: `{resource:\"some_identifier\"}`\n     */\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    extraTokenParams?: Record<string, unknown>;\n\n    /**\n     * An object containing additional header to be including in request.\n     */\n    extraHeaders?: Record<string, ExtraHeader>;\n\n    /**\n     * @deprecated since version 2.1.0. Use fetchRequestCredentials instead.\n     */\n    refreshTokenCredentials?: \"same-origin\" | \"include\" | \"omit\";\n\n    /**\n     * Will check the content type header of the response of the revocation endpoint to match these passed values (default: [])\n     */\n    revokeTokenAdditionalContentTypes?: string[];\n    /**\n     * Will disable pkce validation, changing to true will not append to sign in request code_challenge and code_challenge_method. (default: false)\n     */\n    disablePKCE?: boolean;\n    /**\n     * Sets the credentials for fetch requests. (default: \"same-origin\")\n     * Use this if you need to send cookies to the OIDC/OAuth2 provider or if you are using a proxy that requires cookies\n     */\n    fetchRequestCredentials?: RequestCredentials;\n\n    /**\n     * Only scopes in this list will be passed in the token refresh request.\n     */\n    refreshTokenAllowedScope?: string | undefined;\n}\n\n/**\n * The settings with defaults applied of the {@link OidcClient}.\n * @see {@link OidcClientSettings}\n *\n * @public\n */\nexport class OidcClientSettingsStore {\n    // metadata\n    public readonly authority: string;\n    public readonly metadataUrl: string;\n    public readonly metadata: Partial<OidcMetadata> | undefined;\n    public readonly metadataSeed: Partial<OidcMetadata> | undefined;\n    public readonly signingKeys: SigningKey[] | undefined;\n\n    // client config\n    public readonly client_id: string;\n    public readonly client_secret: string | undefined;\n    public readonly response_type: string;\n    public readonly scope: string;\n    public readonly redirect_uri: string;\n    public readonly post_logout_redirect_uri: string | undefined;\n    public readonly client_authentication: \"client_secret_basic\" | \"client_secret_post\";\n\n    // optional protocol params\n    public readonly prompt: string | undefined;\n    public readonly display: string | undefined;\n    public readonly max_age: number | undefined;\n    public readonly ui_locales: string | undefined;\n    public readonly acr_values: string | undefined;\n    public readonly resource: string | string[] | undefined;\n    public readonly response_mode: \"query\" | \"fragment\";\n\n    // behavior flags\n    public readonly filterProtocolClaims: boolean | string[];\n    public readonly loadUserInfo: boolean;\n    public readonly staleStateAgeInSeconds: number;\n    public readonly clockSkewInSeconds: number;\n    public readonly userInfoJwtIssuer: \"ANY\" | \"OP\" | string;\n    public readonly mergeClaims: boolean;\n\n    public readonly stateStore: StateStore;\n\n    // extra\n    public readonly extraQueryParams: Record<string, string | number | boolean>;\n    public readonly extraTokenParams: Record<string, unknown>;\n    public readonly extraHeaders: Record<string, ExtraHeader>;\n    \n    public readonly revokeTokenAdditionalContentTypes?: string[];\n    public readonly fetchRequestCredentials: RequestCredentials;\n    public readonly refreshTokenAllowedScope: string | undefined;\n    public readonly disablePKCE: boolean;\n    \n    public constructor({\n        // metadata related\n        authority, metadataUrl, metadata, signingKeys, metadataSeed,\n        // client related\n        client_id, client_secret, response_type = DefaultResponseType, scope = DefaultScope,\n        redirect_uri, post_logout_redirect_uri,\n        client_authentication = DefaultClientAuthentication,\n        // optional protocol\n        prompt, display, max_age, ui_locales, acr_values, resource, response_mode = DefaultResponseMode,\n        // behavior flags\n        filterProtocolClaims = true,\n        loadUserInfo = false,\n        staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n        clockSkewInSeconds = DefaultClockSkewInSeconds,\n        userInfoJwtIssuer = \"OP\",\n        mergeClaims = false,\n        disablePKCE = false,\n        // other behavior\n        stateStore,\n        refreshTokenCredentials,\n        revokeTokenAdditionalContentTypes,\n        fetchRequestCredentials,\n        refreshTokenAllowedScope,\n        // extra\n        extraQueryParams = {},\n        extraTokenParams = {},\n        extraHeaders = {},\n    }: OidcClientSettings) {\n\n        this.authority = authority;\n\n        if (metadataUrl) {\n            this.metadataUrl = metadataUrl;\n        } else {\n            this.metadataUrl = authority;\n            if (authority) {\n                if (!this.metadataUrl.endsWith(\"/\")) {\n                    this.metadataUrl += \"/\";\n                }\n                this.metadataUrl += \".well-known/openid-configuration\";\n            }\n        }\n\n        this.metadata = metadata;\n        this.metadataSeed = metadataSeed;\n        this.signingKeys = signingKeys;\n\n        this.client_id = client_id;\n        this.client_secret = client_secret;\n        this.response_type = response_type;\n        this.scope = scope;\n        this.redirect_uri = redirect_uri;\n        this.post_logout_redirect_uri = post_logout_redirect_uri;\n        this.client_authentication = client_authentication;\n\n        this.prompt = prompt;\n        this.display = display;\n        this.max_age = max_age;\n        this.ui_locales = ui_locales;\n        this.acr_values = acr_values;\n        this.resource = resource;\n        this.response_mode = response_mode;\n\n        this.filterProtocolClaims = filterProtocolClaims ?? true;\n        this.loadUserInfo = !!loadUserInfo;\n        this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n        this.clockSkewInSeconds = clockSkewInSeconds;\n        this.userInfoJwtIssuer = userInfoJwtIssuer;\n        this.mergeClaims = !!mergeClaims;\n        this.disablePKCE = !!disablePKCE;\n        this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n\n        if (fetchRequestCredentials && refreshTokenCredentials) {\n            console.warn(\"Both fetchRequestCredentials and refreshTokenCredentials is set. Only fetchRequestCredentials will be used.\");\n        }\n        this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials\n            : refreshTokenCredentials ? refreshTokenCredentials : \"same-origin\";\n\n        if (stateStore) {\n            this.stateStore = stateStore;\n        }\n        else {\n            const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n            this.stateStore = new WebStorageStateStore({ store });\n        }\n\n        this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n\n        this.extraQueryParams = extraQueryParams;\n        this.extraTokenParams = extraTokenParams;\n        this.extraHeaders = extraHeaders;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, JwtUtils } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { MetadataService } from \"./MetadataService\";\nimport type { JwtClaims } from \"./Claims\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\n\n/**\n * @internal\n */\nexport class UserInfoService {\n    protected readonly _logger = new Logger(\"UserInfoService\");\n    private readonly _jsonService: JsonService;\n\n    public constructor(private readonly _settings: OidcClientSettingsStore,\n        private readonly _metadataService: MetadataService,\n    ) {\n        this._jsonService = new JsonService(\n            undefined,\n            this._getClaimsFromJwt,\n            this._settings.extraHeaders,\n        );\n    }\n\n    public async getClaims(token: string): Promise<JwtClaims> {\n        const logger = this._logger.create(\"getClaims\");\n        if (!token) {\n            this._logger.throw(new Error(\"No token passed\"));\n        }\n\n        const url = await this._metadataService.getUserInfoEndpoint();\n        logger.debug(\"got userinfo url\", url);\n\n        const claims = await this._jsonService.getJson(url, {\n            token,\n            credentials: this._settings.fetchRequestCredentials,\n        });\n        logger.debug(\"got claims\", claims);\n\n        return claims;\n    }\n\n    protected _getClaimsFromJwt = async (responseText: string): Promise<JwtClaims> => {\n        const logger = this._logger.create(\"_getClaimsFromJwt\");\n        try {\n            const payload = JwtUtils.decode(responseText);\n            logger.debug(\"JWT decoding successful\");\n\n            return payload;\n        } catch (err) {\n            logger.error(\"Error parsing JWT response\");\n            throw err;\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { CryptoUtils, Logger } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { MetadataService } from \"./MetadataService\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\n\n/**\n * @internal\n */\nexport interface ExchangeCodeArgs {\n    client_id?: string;\n    client_secret?: string;\n    redirect_uri?: string;\n\n    grant_type?: string;\n    code: string;\n    code_verifier?: string;\n}\n\n/**\n * @internal\n */\nexport interface ExchangeCredentialsArgs {\n    client_id?: string;\n    client_secret?: string;\n\n    grant_type?: string;\n    scope?: string;\n\n    username: string;\n    password: string;\n}\n\n/**\n * @internal\n */\nexport interface ExchangeRefreshTokenArgs {\n    client_id?: string;\n    client_secret?: string;\n\n    grant_type?: string;\n    refresh_token: string;\n    scope?: string;\n\n    timeoutInSeconds?: number;\n}\n\n/**\n * @internal\n */\nexport interface RevokeArgs {\n    token: string;\n    token_type_hint?: \"access_token\" | \"refresh_token\";\n}\n\n/**\n * @internal\n */\nexport class TokenClient {\n    private readonly _logger = new Logger(\"TokenClient\");\n    private readonly _jsonService;\n\n    public constructor(\n        private readonly _settings: OidcClientSettingsStore,\n        private readonly _metadataService: MetadataService,\n    ) {\n        this._jsonService = new JsonService(\n            this._settings.revokeTokenAdditionalContentTypes,\n            null,\n            this._settings.extraHeaders,\n        );\n    }\n\n    /**\n     * Exchange code.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n     */\n    public async exchangeCode({\n        grant_type = \"authorization_code\",\n        redirect_uri = this._settings.redirect_uri,\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        ...args\n    }: ExchangeCodeArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeCode\");\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n        if (!redirect_uri) {\n            logger.throw(new Error(\"A redirect_uri is required\"));\n        }\n        if (!args.code) {\n            logger.throw(new Error(\"A code is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type, redirect_uri });\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Exchange credentials.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n     */\n    public async exchangeCredentials({\n        grant_type = \"password\",\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        scope = this._settings.scope,\n        ...args\n    }: ExchangeCredentialsArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeCredentials\");\n\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type, scope });\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Exchange a refresh token.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n     */\n    public async exchangeRefreshToken({\n        grant_type = \"refresh_token\",\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        timeoutInSeconds,\n        ...args\n    }: ExchangeRefreshTokenArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeRefreshToken\");\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n        if (!args.refresh_token) {\n            logger.throw(new Error(\"A refresh_token is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type });\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Revoke an access or refresh token.\n     *\n     * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n     */\n    public async revoke(args: RevokeArgs): Promise<void> {\n        const logger = this._logger.create(\"revoke\");\n        if (!args.token) {\n            logger.throw(new Error(\"A token is required\"));\n        }\n\n        const url = await this._metadataService.getRevocationEndpoint(false);\n\n        logger.debug(`got revocation endpoint, revoking ${args.token_type_hint ?? \"default token type\"}`);\n\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        params.set(\"client_id\", this._settings.client_id);\n        if (this._settings.client_secret) {\n            params.set(\"client_secret\", this._settings.client_secret);\n        }\n\n        await this._jsonService.postForm(url, { body: params });\n        logger.debug(\"got response\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, JwtUtils } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport type { MetadataService } from \"./MetadataService\";\nimport { UserInfoService } from \"./UserInfoService\";\nimport { TokenClient } from \"./TokenClient\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { SigninState } from \"./SigninState\";\nimport type { SigninResponse } from \"./SigninResponse\";\nimport type { State } from \"./State\";\nimport type { SignoutResponse } from \"./SignoutResponse\";\nimport type { UserProfile } from \"./User\";\nimport type { RefreshState } from \"./RefreshState\";\nimport type { IdTokenClaims } from \"./Claims\";\nimport type { ClaimsService } from \"./ClaimsService\";\n\n/**\n * @internal\n */\nexport class ResponseValidator {\n    protected readonly _logger = new Logger(\"ResponseValidator\");\n    protected readonly _userInfoService = new UserInfoService(this._settings, this._metadataService);\n    protected readonly _tokenClient = new TokenClient(this._settings, this._metadataService);\n\n    public constructor(\n        protected readonly _settings: OidcClientSettingsStore,\n        protected readonly _metadataService: MetadataService,\n        protected readonly _claimsService: ClaimsService,\n    ) {}\n\n    public async validateSigninResponse(response: SigninResponse, state: SigninState): Promise<void> {\n        const logger = this._logger.create(\"validateSigninResponse\");\n\n        this._processSigninState(response, state);\n        logger.debug(\"state processed\");\n\n        await this._processCode(response, state);\n        logger.debug(\"code processed\");\n\n        if (response.isOpenId) {\n            this._validateIdTokenAttributes(response);\n        }\n        logger.debug(\"tokens validated\");\n\n        await this._processClaims(response, state?.skipUserInfo, response.isOpenId);\n        logger.debug(\"claims processed\");\n    }\n\n    public async validateCredentialsResponse(response: SigninResponse, skipUserInfo: boolean): Promise<void> {\n        const logger = this._logger.create(\"validateCredentialsResponse\");\n\n        if (response.isOpenId) {\n            this._validateIdTokenAttributes(response);\n        }\n        logger.debug(\"tokens validated\");\n\n        await this._processClaims(response, skipUserInfo, response.isOpenId);\n        logger.debug(\"claims processed\");\n    }\n\n    public async validateRefreshResponse(response: SigninResponse, state: RefreshState): Promise<void> {\n        const logger = this._logger.create(\"validateRefreshResponse\");\n\n        response.userState = state.data;\n        // if there's no session_state on the response, copy over session_state from original request\n        response.session_state ??= state.session_state;\n        // if there's no scope on the response, then assume all scopes granted (per-spec) and copy over scopes from original request\n        response.scope ??= state.scope;\n\n        // OpenID Connect Core 1.0 says that id_token is optional in refresh response:\n        // https://openid.net/specs/openid-connect-core-1_0.html#RefreshTokenResponse\n        if (response.isOpenId && !!response.id_token) {\n            this._validateIdTokenAttributes(response, state.id_token);\n            logger.debug(\"ID Token validated\");\n        }\n\n        if (!response.id_token) {\n            // if there's no id_token on the response, copy over id_token from original request\n            response.id_token = state.id_token;\n            // and decoded part too\n            response.profile = state.profile;\n        }\n\n        const hasIdToken = response.isOpenId && !!response.id_token;\n        await this._processClaims(response, false, hasIdToken);\n        logger.debug(\"claims processed\");\n    }\n\n    public validateSignoutResponse(response: SignoutResponse, state: State): void {\n        const logger = this._logger.create(\"validateSignoutResponse\");\n        if (state.id !== response.state) {\n            logger.throw(new Error(\"State does not match\"));\n        }\n\n        // now that we know the state matches, take the stored data\n        // and set it into the response so callers can get their state\n        // this is important for both success & error outcomes\n        logger.debug(\"state validated\");\n        response.userState = state.data;\n\n        if (response.error) {\n            logger.warn(\"Response was error\", response.error);\n            throw new ErrorResponse(response);\n        }\n    }\n\n    protected _processSigninState(response: SigninResponse, state: SigninState): void {\n        const logger = this._logger.create(\"_processSigninState\");\n        if (state.id !== response.state) {\n            logger.throw(new Error(\"State does not match\"));\n        }\n\n        if (!state.client_id) {\n            logger.throw(new Error(\"No client_id on state\"));\n        }\n\n        if (!state.authority) {\n            logger.throw(new Error(\"No authority on state\"));\n        }\n\n        // ensure we're using the correct authority\n        if (this._settings.authority !== state.authority) {\n            logger.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n        }\n        if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n            logger.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n        }\n\n        // now that we know the state matches, take the stored data\n        // and set it into the response so callers can get their state\n        // this is important for both success & error outcomes\n        logger.debug(\"state validated\");\n        response.userState = state.data;\n        // if there's no scope on the response, then assume all scopes granted (per-spec) and copy over scopes from original request\n        response.scope ??= state.scope;\n\n        if (response.error) {\n            logger.warn(\"Response was error\", response.error);\n            throw new ErrorResponse(response);\n        }\n\n        if (state.code_verifier && !response.code) {\n            logger.throw(new Error(\"Expected code in response\"));\n        }\n\n    }\n\n    protected async _processClaims(response: SigninResponse, skipUserInfo = false, validateSub = true): Promise<void> {\n        const logger = this._logger.create(\"_processClaims\");\n        response.profile = this._claimsService.filterProtocolClaims(response.profile);\n\n        if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n            logger.debug(\"not loading user info\");\n            return;\n        }\n\n        logger.debug(\"loading user info\");\n        const claims = await this._userInfoService.getClaims(response.access_token);\n        logger.debug(\"user info claims received from user info endpoint\");\n\n        if (validateSub && claims.sub !== response.profile.sub) {\n            logger.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n        }\n\n        response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims as IdTokenClaims));\n        logger.debug(\"user info claims received, updated profile:\", response.profile);\n    }\n\n    protected async _processCode(response: SigninResponse, state: SigninState): Promise<void> {\n        const logger = this._logger.create(\"_processCode\");\n        if (response.code) {\n            logger.debug(\"Validating code\");\n            const tokenResponse = await this._tokenClient.exchangeCode({\n                client_id: state.client_id,\n                client_secret: state.client_secret,\n                code: response.code,\n                redirect_uri: state.redirect_uri,\n                code_verifier: state.code_verifier,\n                ...state.extraTokenParams,\n            });\n            Object.assign(response, tokenResponse);\n        } else {\n            logger.debug(\"No code to process\");\n        }\n    }\n\n    protected _validateIdTokenAttributes(response: SigninResponse, currentToken?: string): void {\n        const logger = this._logger.create(\"_validateIdTokenAttributes\");\n\n        logger.debug(\"decoding ID Token JWT\");\n        const profile = JwtUtils.decode(response.id_token ?? \"\");\n\n        if (!profile.sub) {\n            logger.throw(new Error(\"ID Token is missing a subject claim\"));\n        }\n\n        if (currentToken) {\n            const current = JwtUtils.decode(currentToken);\n            if (current.sub !== profile.sub) {\n                logger.throw(new Error(\"sub in id_token does not match current sub\"));\n            }\n            if (current.auth_time && current.auth_time !== profile.auth_time) {\n                logger.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n            }\n            if (current.azp && current.azp !== profile.azp) {\n                logger.throw(new Error(\"azp in id_token does not match original azp\"));\n            }\n            if (!current.azp && profile.azp) {\n                logger.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n            }\n        }\n\n        response.profile = profile as UserProfile;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, CryptoUtils, Timer } from \"./utils\";\nimport type { StateStore } from \"./StateStore\";\n\n/**\n * @public\n */\nexport class State {\n    public readonly id: string;\n    public readonly created: number;\n    public readonly request_type: string | undefined;\n\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    public readonly data: unknown | undefined;\n\n    public constructor(args: {\n        id?: string;\n        data?: unknown;\n        created?: number;\n        request_type?: string;\n    }) {\n        this.id = args.id || CryptoUtils.generateUUIDv4();\n        this.data = args.data;\n\n        if (args.created && args.created > 0) {\n            this.created = args.created;\n        }\n        else {\n            this.created = Timer.getEpochTime();\n        }\n        this.request_type = args.request_type;\n    }\n\n    public toStorageString(): string {\n        new Logger(\"State\").create(\"toStorageString\");\n        return JSON.stringify({\n            id: this.id,\n            data: this.data,\n            created: this.created,\n            request_type: this.request_type,\n        });\n    }\n\n    public static fromStorageString(storageString: string): State {\n        Logger.createStatic(\"State\", \"fromStorageString\");\n        return new State(JSON.parse(storageString));\n    }\n\n    public static async clearStaleState(storage: StateStore, age: number): Promise<void> {\n        const logger = Logger.createStatic(\"State\", \"clearStaleState\");\n        const cutoff = Timer.getEpochTime() - age;\n\n        const keys = await storage.getAllKeys();\n        logger.debug(\"got keys\", keys);\n\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            const item = await storage.get(key);\n            let remove = false;\n\n            if (item) {\n                try {\n                    const state = State.fromStorageString(item);\n\n                    logger.debug(\"got item from key:\", key, state.created);\n                    if (state.created <= cutoff) {\n                        remove = true;\n                    }\n                }\n                catch (err) {\n                    logger.error(\"Error parsing state for key:\", key, err);\n                    remove = true;\n                }\n            }\n            else {\n                logger.debug(\"no item in storage for key:\", key);\n                remove = true;\n            }\n\n            if (remove) {\n                logger.debug(\"removed item for key:\", key);\n                void storage.remove(key);\n            }\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, CryptoUtils } from \"./utils\";\nimport { State } from \"./State\";\n\n/**\n * @public\n */\nexport class SigninState extends State {\n    // isCode\n    /** The same code_verifier that was used to obtain the authorization_code via PKCE. */\n    public readonly code_verifier: string | undefined;\n    /** Used to secure authorization code grants via Proof Key for Code Exchange (PKCE). */\n    public readonly code_challenge: string | undefined;\n\n    // to ensure state still matches settings\n    /** @see {@link OidcClientSettings.authority} */\n    public readonly authority: string;\n    /** @see {@link OidcClientSettings.client_id} */\n    public readonly client_id: string;\n    /** @see {@link OidcClientSettings.redirect_uri} */\n    public readonly redirect_uri: string;\n    /** @see {@link OidcClientSettings.scope} */\n    public readonly scope: string;\n    /** @see {@link OidcClientSettings.client_secret} */\n    public readonly client_secret: string | undefined;\n    /** @see {@link OidcClientSettings.extraTokenParams} */\n    public readonly extraTokenParams: Record<string, unknown> | undefined;\n    /** @see {@link OidcClientSettings.response_mode} */\n    public readonly response_mode: \"query\" | \"fragment\" | undefined;\n\n    public readonly skipUserInfo: boolean | undefined;\n\n    public constructor(args: {\n        id?: string;\n        data?: unknown;\n        created?: number;\n        request_type?: string;\n\n        code_verifier?: string | boolean;\n        authority: string;\n        client_id: string;\n        redirect_uri: string;\n        scope: string;\n        client_secret?: string;\n        extraTokenParams?: Record<string, unknown>;\n        response_mode?: \"query\" | \"fragment\";\n        skipUserInfo?: boolean;\n    }) {\n        super(args);\n\n        if (args.code_verifier === true) {\n            this.code_verifier = CryptoUtils.generateCodeVerifier();\n        }\n        else if (args.code_verifier) {\n            this.code_verifier = args.code_verifier;\n        }\n\n        if (this.code_verifier) {\n            this.code_challenge = CryptoUtils.generateCodeChallenge(this.code_verifier);\n        }\n\n        this.authority = args.authority;\n        this.client_id = args.client_id;\n        this.redirect_uri = args.redirect_uri;\n        this.scope = args.scope;\n        this.client_secret = args.client_secret;\n        this.extraTokenParams = args.extraTokenParams;\n\n        this.response_mode = args.response_mode;\n        this.skipUserInfo = args.skipUserInfo;\n    }\n\n    public toStorageString(): string {\n        new Logger(\"SigninState\").create(\"toStorageString\");\n        return JSON.stringify({\n            id: this.id,\n            data: this.data,\n            created: this.created,\n            request_type: this.request_type,\n\n            code_verifier: this.code_verifier,\n            authority: this.authority,\n            client_id: this.client_id,\n            redirect_uri: this.redirect_uri,\n            scope: this.scope,\n            client_secret: this.client_secret,\n            extraTokenParams : this.extraTokenParams,\n            response_mode: this.response_mode,\n            skipUserInfo: this.skipUserInfo,\n        });\n    }\n\n    public static fromStorageString(storageString: string): SigninState {\n        Logger.createStatic(\"SigninState\", \"fromStorageString\");\n        const data = JSON.parse(storageString);\n        return new SigninState(data);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { SigninState } from \"./SigninState\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n */\nexport interface SigninRequestArgs {\n    // mandatory\n    url: string;\n    authority: string;\n    client_id: string;\n    redirect_uri: string;\n    response_type: string;\n    scope: string;\n\n    // optional\n    response_mode?: \"query\" | \"fragment\";\n    nonce?: string;\n    display?: string;\n    prompt?: string;\n    max_age?: number;\n    ui_locales?: string;\n    id_token_hint?: string;\n    login_hint?: string;\n    acr_values?: string;\n\n    // other\n    resource?: string | string[];\n    request?: string;\n    request_uri?: string;\n    request_type?: string;\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    // special\n    extraTokenParams?: Record<string, unknown>;\n    client_secret?: string;\n    skipUserInfo?: boolean;\n    disablePKCE?: boolean;\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state_data?: unknown;\n}\n\n/**\n * @public\n */\nexport class SigninRequest {\n    private readonly _logger = new Logger(\"SigninRequest\");\n\n    public readonly url: string;\n    public readonly state: SigninState;\n\n    public constructor({\n        // mandatory\n        url, authority, client_id, redirect_uri, response_type, scope,\n        // optional\n        state_data, response_mode, request_type, client_secret, nonce,\n        resource,\n        skipUserInfo,\n        extraQueryParams,\n        extraTokenParams,\n        disablePKCE,\n        ...optionalParams\n    }: SigninRequestArgs) {\n        if (!url) {\n            this._logger.error(\"ctor: No url passed\");\n            throw new Error(\"url\");\n        }\n        if (!client_id) {\n            this._logger.error(\"ctor: No client_id passed\");\n            throw new Error(\"client_id\");\n        }\n        if (!redirect_uri) {\n            this._logger.error(\"ctor: No redirect_uri passed\");\n            throw new Error(\"redirect_uri\");\n        }\n        if (!response_type) {\n            this._logger.error(\"ctor: No response_type passed\");\n            throw new Error(\"response_type\");\n        }\n        if (!scope) {\n            this._logger.error(\"ctor: No scope passed\");\n            throw new Error(\"scope\");\n        }\n        if (!authority) {\n            this._logger.error(\"ctor: No authority passed\");\n            throw new Error(\"authority\");\n        }\n\n        this.state = new SigninState({\n            data: state_data,\n            request_type,\n            code_verifier: !disablePKCE,\n            client_id, authority, redirect_uri,\n            response_mode,\n            client_secret, scope, extraTokenParams,\n            skipUserInfo,\n        });\n\n        const parsedUrl = new URL(url);\n        parsedUrl.searchParams.append(\"client_id\", client_id);\n        parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n        parsedUrl.searchParams.append(\"response_type\", response_type);\n        parsedUrl.searchParams.append(\"scope\", scope);\n        if (nonce) {\n            parsedUrl.searchParams.append(\"nonce\", nonce);\n        }\n\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n        if (this.state.code_challenge) {\n            parsedUrl.searchParams.append(\"code_challenge\", this.state.code_challenge);\n            parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n        }\n\n        if (resource) {\n            // https://datatracker.ietf.org/doc/html/rfc8707\n            const resources = Array.isArray(resource) ? resource : [resource];\n            resources\n                .forEach(r => parsedUrl.searchParams.append(\"resource\", r));\n        }\n\n        for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n            if (value != null) {\n                parsedUrl.searchParams.append(key, value.toString());\n            }\n        }\n\n        this.url = parsedUrl.href;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Timer } from \"./utils\";\nimport type { UserProfile } from \"./User\";\n\nconst OidcScope = \"openid\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class SigninResponse {\n    // props present in the initial callback response regardless of success\n    public readonly state: string | null;\n    /** @see {@link User.session_state} */\n    public session_state: string | null;\n\n    // error props\n    /** @see {@link ErrorResponse.error} */\n    public readonly error: string | null;\n    /** @see {@link ErrorResponse.error_description} */\n    public readonly error_description: string | null;\n    /** @see {@link ErrorResponse.error_uri} */\n    public readonly error_uri: string | null;\n\n    // success props\n    public readonly code: string | null;\n\n    // props set after validation\n    /** @see {@link User.id_token} */\n    public id_token?: string;\n    /** @see {@link User.access_token} */\n    public access_token = \"\";\n    /** @see {@link User.token_type} */\n    public token_type = \"\";\n    /** @see {@link User.refresh_token} */\n    public refresh_token?: string;\n    /** @see {@link User.scope} */\n    public scope?: string;\n    /** @see {@link User.expires_at} */\n    public expires_at?: number;\n\n    /** custom state data set during the initial signin request */\n    public userState: unknown;\n\n    /** @see {@link User.profile} */\n    public profile: UserProfile = {} as UserProfile;\n\n    public constructor(params: URLSearchParams) {\n        this.state = params.get(\"state\");\n        this.session_state = params.get(\"session_state\");\n\n        this.error = params.get(\"error\");\n        this.error_description = params.get(\"error_description\");\n        this.error_uri = params.get(\"error_uri\");\n\n        this.code = params.get(\"code\");\n    }\n\n    public get expires_in(): number | undefined {\n        if (this.expires_at === undefined) {\n            return undefined;\n        }\n        return this.expires_at - Timer.getEpochTime();\n    }\n    public set expires_in(value: number | undefined) {\n        // spec expects a number, but normalize here just in case\n        if (typeof value === \"string\") value = Number(value);\n        if (value !== undefined && value >= 0) {\n            this.expires_at = Math.floor(value) + Timer.getEpochTime();\n        }\n    }\n\n    public get isOpenId(): boolean {\n        return this.scope?.split(\" \").includes(OidcScope) || !!this.id_token;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { State } from \"./State\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-rpinitiated-1_0.html#RPLogout\n */\nexport interface SignoutRequestArgs {\n    // mandatory\n    url: string;\n\n    // optional\n    id_token_hint?: string;\n    post_logout_redirect_uri?: string;\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    // special\n    request_type?: string;\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state_data?: unknown;\n}\n\n/**\n * @public\n */\nexport class SignoutRequest {\n    private readonly _logger = new Logger(\"SignoutRequest\");\n\n    public readonly url: string;\n    public readonly state?: State;\n\n    public constructor({\n        url,\n        state_data, id_token_hint, post_logout_redirect_uri, extraQueryParams, request_type,\n    }: SignoutRequestArgs) {\n        if (!url) {\n            this._logger.error(\"ctor: No url passed\");\n            throw new Error(\"url\");\n        }\n\n        const parsedUrl = new URL(url);\n        if (id_token_hint) {\n            parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n        }\n\n        if (post_logout_redirect_uri) {\n            parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n\n            if (state_data) {\n                this.state = new State({ data: state_data, request_type });\n\n                parsedUrl.searchParams.append(\"state\", this.state.id);\n            }\n        }\n\n        for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n            if (value != null) {\n                parsedUrl.searchParams.append(key, value.toString());\n            }\n        }\n\n        this.url = parsedUrl.href;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class SignoutResponse {\n    public readonly state: string | null;\n\n    // error props\n    /** @see {@link ErrorResponse.error} */\n    public error: string | null;\n    /** @see {@link ErrorResponse.error_description} */\n    public error_description: string | null;\n    /** @see {@link ErrorResponse.error_uri} */\n    public error_uri: string | null;\n\n    /** custom state data set during the initial signin request */\n    public userState: unknown;\n\n    public constructor(params: URLSearchParams) {\n        this.state = params.get(\"state\");\n\n        this.error = params.get(\"error\");\n        this.error_description = params.get(\"error_description\");\n        this.error_uri = params.get(\"error_uri\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport type { JwtClaims } from \"./Claims\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { UserProfile } from \"./User\";\nimport { Logger } from \"./utils\";\n\n/**\n * Protocol claims that could be removed by default from profile.\n * Derived from the following sets of claims:\n * - {@link https://datatracker.ietf.org/doc/html/rfc7519.html#section-4.1}\n * - {@link https://openid.net/specs/openid-connect-core-1_0.html#IDToken}\n * - {@link https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken}\n *\n * @internal\n */\nconst DefaultProtocolClaims = [\n    \"nbf\",\n    \"jti\",\n    \"auth_time\",\n    \"nonce\",\n    \"acr\",\n    \"amr\",\n    \"azp\",\n    \"at_hash\", // https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n] as const;\n\n/**\n * Protocol claims that should never be removed from profile.\n * \"sub\" is needed internally and others should remain required as per the OIDC specs.\n *\n * @internal\n */\nconst InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\n\n/**\n * @internal\n */\nexport class ClaimsService {\n    protected readonly _logger = new Logger(\"ClaimsService\");\n    public constructor(\n        protected readonly _settings: OidcClientSettingsStore,\n    ) {}\n\n    public filterProtocolClaims(claims: UserProfile): UserProfile {\n        const result = { ...claims };\n\n        if (this._settings.filterProtocolClaims) {\n            let protocolClaims;\n            if (Array.isArray(this._settings.filterProtocolClaims)) {\n                protocolClaims = this._settings.filterProtocolClaims;\n            } else {\n                protocolClaims = DefaultProtocolClaims;\n            }\n\n            for (const claim of protocolClaims) {\n                if (!InternalRequiredProtocolClaims.includes(claim)) {\n                    delete result[claim];\n                }\n            }\n        }\n\n        return result;\n    }\n\n    public mergeClaims(claims1: UserProfile, claims2: JwtClaims): UserProfile {\n        const result = { ...claims1 };\n\n        for (const [claim, values] of Object.entries(claims2)) {\n            for (const value of Array.isArray(values) ? values : [values]) {\n                const previousValue = result[claim];\n                if (!previousValue) {\n                    result[claim] = value;\n                }\n                else if (Array.isArray(previousValue)) {\n                    if (!previousValue.includes(value)) {\n                        previousValue.push(value);\n                    }\n                }\n                else if (result[claim] !== value) {\n                    if (typeof value === \"object\" && this._settings.mergeClaims) {\n                        result[claim] = this.mergeClaims(previousValue as UserProfile, value);\n                    }\n                    else {\n                        result[claim] = [previousValue, value];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, UrlUtils } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport { OidcClientSettings, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport { ResponseValidator } from \"./ResponseValidator\";\nimport { MetadataService } from \"./MetadataService\";\nimport type { RefreshState } from \"./RefreshState\";\nimport { SigninRequest, SigninRequestArgs } from \"./SigninRequest\";\nimport { SigninResponse } from \"./SigninResponse\";\nimport { SignoutRequest, SignoutRequestArgs } from \"./SignoutRequest\";\nimport { SignoutResponse } from \"./SignoutResponse\";\nimport { SigninState } from \"./SigninState\";\nimport { State } from \"./State\";\nimport { TokenClient } from \"./TokenClient\";\nimport { ClaimsService } from \"./ClaimsService\";\n\n/**\n * @public\n */\nexport interface CreateSigninRequestArgs\n    extends Omit<SigninRequestArgs, \"url\" | \"authority\" | \"client_id\" | \"redirect_uri\" | \"response_type\" | \"scope\" | \"state_data\"> {\n    redirect_uri?: string;\n    response_type?: string;\n    scope?: string;\n\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state?: unknown;\n}\n\n/**\n * @public\n */\nexport interface UseRefreshTokenArgs {\n    state: RefreshState;\n    timeoutInSeconds?: number;\n}\n\n/**\n * @public\n */\nexport type CreateSignoutRequestArgs = Omit<SignoutRequestArgs, \"url\" | \"state_data\"> & {\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state?: unknown;\n};\n\n/**\n * @public\n */\nexport type ProcessResourceOwnerPasswordCredentialsArgs = {\n    username: string;\n    password: string;\n    skipUserInfo?: boolean;\n    extraTokenParams?: Record<string, unknown>;\n};\n\n/**\n * Provides the raw OIDC/OAuth2 protocol support for the authorization endpoint and the end session endpoint in the\n * authorization server. It provides a bare-bones protocol implementation and is used by the UserManager class.\n * Only use this class if you simply want protocol support without the additional management features of the\n * UserManager class.\n *\n * @public\n */\nexport class OidcClient {\n    public readonly settings: OidcClientSettingsStore;\n    protected readonly _logger = new Logger(\"OidcClient\");\n\n    public readonly metadataService: MetadataService;\n    protected readonly _claimsService: ClaimsService;\n    protected readonly _validator: ResponseValidator;\n    protected readonly _tokenClient: TokenClient;\n\n    public constructor(settings: OidcClientSettings) {\n        this.settings = new OidcClientSettingsStore(settings);\n\n        this.metadataService = new MetadataService(this.settings);\n        this._claimsService = new ClaimsService(this.settings);\n        this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n        this._tokenClient = new TokenClient(this.settings, this.metadataService);\n    }\n\n    public async createSigninRequest({\n        state,\n        request,\n        request_uri,\n        request_type,\n        id_token_hint,\n        login_hint,\n        skipUserInfo,\n        nonce,\n        response_type = this.settings.response_type,\n        scope = this.settings.scope,\n        redirect_uri = this.settings.redirect_uri,\n        prompt = this.settings.prompt,\n        display = this.settings.display,\n        max_age = this.settings.max_age,\n        ui_locales = this.settings.ui_locales,\n        acr_values = this.settings.acr_values,\n        resource = this.settings.resource,\n        response_mode = this.settings.response_mode,\n        extraQueryParams = this.settings.extraQueryParams,\n        extraTokenParams = this.settings.extraTokenParams,\n    }: CreateSigninRequestArgs): Promise<SigninRequest> {\n        const logger = this._logger.create(\"createSigninRequest\");\n\n        if (response_type !== \"code\") {\n            throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n        }\n\n        const url = await this.metadataService.getAuthorizationEndpoint();\n        logger.debug(\"Received authorization endpoint\", url);\n\n        const signinRequest = new SigninRequest({\n            url,\n            authority: this.settings.authority,\n            client_id: this.settings.client_id,\n            redirect_uri,\n            response_type,\n            scope,\n            state_data: state,\n            prompt, display, max_age, ui_locales, id_token_hint, login_hint, acr_values,\n            resource, request, request_uri, extraQueryParams, extraTokenParams, request_type, response_mode,\n            client_secret: this.settings.client_secret,\n            skipUserInfo,\n            nonce,\n            disablePKCE: this.settings.disablePKCE,\n        });\n\n        // house cleaning\n        await this.clearStaleState();\n\n        const signinState = signinRequest.state;\n        await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n        return signinRequest;\n    }\n\n    public async readSigninResponseState(url: string, removeState = false): Promise<{ state: SigninState; response: SigninResponse }> {\n        const logger = this._logger.create(\"readSigninResponseState\");\n\n        const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n        if (!response.state) {\n            logger.throw(new Error(\"No state in response\"));\n            // need to throw within this function's body for type narrowing to work\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n        if (!storedStateString) {\n            logger.throw(new Error(\"No matching state found in storage\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const state = SigninState.fromStorageString(storedStateString);\n        return { state, response };\n    }\n\n    public async processSigninResponse(url: string): Promise<SigninResponse> {\n        const logger = this._logger.create(\"processSigninResponse\");\n\n        const { state, response } = await this.readSigninResponseState(url, true);\n        logger.debug(\"received state from storage; validating response\");\n        await this._validator.validateSigninResponse(response, state);\n        return response;\n    }\n\n    public async processResourceOwnerPasswordCredentials({\n        username,\n        password,\n        skipUserInfo = false,\n        extraTokenParams = {},\n    }: ProcessResourceOwnerPasswordCredentialsArgs): Promise<SigninResponse> {\n        const tokenResponse: Record<string, unknown> = await this._tokenClient.exchangeCredentials({ username, password, ...extraTokenParams });\n        const signinResponse: SigninResponse = new SigninResponse(new URLSearchParams());\n        Object.assign(signinResponse, tokenResponse);\n        await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n        return signinResponse;\n    }\n\n    public async useRefreshToken({\n        state,\n        timeoutInSeconds,\n    }: UseRefreshTokenArgs): Promise<SigninResponse> {\n        const logger = this._logger.create(\"useRefreshToken\");\n\n        // https://github.com/authts/oidc-client-ts/issues/695\n        // In some cases (e.g. AzureAD), not all granted scopes are allowed on token refresh requests.\n        // Therefore, we filter all granted scopes by a list of allowable scopes.\n        let scope;\n        if (this.settings.refreshTokenAllowedScope === undefined) {\n            scope = state.scope;\n        } else {\n            const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n            const providedScopes = state.scope?.split(\" \") || [];\n\n            scope = providedScopes.filter(s => allowableScopes.includes(s)).join(\" \");\n        }\n\n        const result = await this._tokenClient.exchangeRefreshToken({\n            refresh_token: state.refresh_token,\n            // provide the (possible filtered) scope list\n            scope,\n            timeoutInSeconds,\n        });\n        const response = new SigninResponse(new URLSearchParams());\n        Object.assign(response, result);\n        logger.debug(\"validating response\", response);\n        await this._validator.validateRefreshResponse(response, {\n            ...state,\n            // overide the scope in the state handed over to the validator\n            // so it can set the granted scope to the requested scope in case none is included in the response\n            scope,\n        });\n        return response;\n    }\n\n    public async createSignoutRequest({\n        state,\n        id_token_hint,\n        request_type,\n        post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n        extraQueryParams = this.settings.extraQueryParams,\n    }: CreateSignoutRequestArgs = {}): Promise<SignoutRequest> {\n        const logger = this._logger.create(\"createSignoutRequest\");\n\n        const url = await this.metadataService.getEndSessionEndpoint();\n        if (!url) {\n            logger.throw(new Error(\"No end session endpoint\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        logger.debug(\"Received end session endpoint\", url);\n\n        const request = new SignoutRequest({\n            url,\n            id_token_hint,\n            post_logout_redirect_uri,\n            state_data: state,\n            extraQueryParams,\n            request_type,\n        });\n\n        // house cleaning\n        await this.clearStaleState();\n\n        const signoutState = request.state;\n        if (signoutState) {\n            logger.debug(\"Signout request has state to persist\");\n            await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n        }\n\n        return request;\n    }\n\n    public async readSignoutResponseState(url: string, removeState = false): Promise<{ state: State | undefined; response: SignoutResponse }> {\n        const logger = this._logger.create(\"readSignoutResponseState\");\n\n        const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n        if (!response.state) {\n            logger.debug(\"No state in response\");\n\n            if (response.error) {\n                logger.warn(\"Response was error:\", response.error);\n                throw new ErrorResponse(response);\n            }\n\n            return { state: undefined, response };\n        }\n\n        const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n        if (!storedStateString) {\n            logger.throw(new Error(\"No matching state found in storage\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const state = State.fromStorageString(storedStateString);\n        return { state, response };\n    }\n\n    public async processSignoutResponse(url: string): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"processSignoutResponse\");\n\n        const { state, response } = await this.readSignoutResponseState(url, true);\n        if (state) {\n            logger.debug(\"Received state from storage; validating response\");\n            this._validator.validateSignoutResponse(response, state);\n        } else {\n            logger.debug(\"No state from storage; skipping response validation\");\n        }\n\n        return response;\n    }\n\n    public clearStaleState(): Promise<void> {\n        this._logger.create(\"clearStaleState\");\n        return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n    }\n\n    public async revokeToken(token: string, type?: \"access_token\" | \"refresh_token\"): Promise<void> {\n        this._logger.create(\"revokeToken\");\n        return await this._tokenClient.revoke({\n            token,\n            token_type_hint: type,\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { CheckSessionIFrame } from \"./CheckSessionIFrame\";\nimport type { UserManager } from \"./UserManager\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport class SessionMonitor {\n    private readonly _logger = new Logger(\"SessionMonitor\");\n\n    private _sub: string | undefined;\n    private _sid: string | undefined;\n    private _checkSessionIFrame?: CheckSessionIFrame;\n\n    public constructor(private readonly _userManager: UserManager) {\n        if (!_userManager) {\n            this._logger.throw(new Error(\"No user manager passed\"));\n        }\n\n        this._userManager.events.addUserLoaded(this._start);\n        this._userManager.events.addUserUnloaded(this._stop);\n\n        this._init().catch((err: unknown) => {\n            // catch to suppress errors since we're in a ctor\n            this._logger.error(err);\n        });\n    }\n\n    protected async _init(): Promise<void> {\n        this._logger.create(\"_init\");\n        const user = await this._userManager.getUser();\n        // doing this manually here since calling getUser\n        // doesn't trigger load event.\n        if (user) {\n            void this._start(user);\n        }\n        else if (this._userManager.settings.monitorAnonymousSession) {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n                const tmpUser = {\n                    session_state: session.session_state,\n                    profile: session.sub && session.sid ? {\n                        sub: session.sub,\n                        sid: session.sid,\n                    } : null,\n                };\n                void this._start(tmpUser);\n            }\n        }\n    }\n\n    protected _start = async (\n        user: User | {\n            session_state: string;\n            profile: { sub: string; sid: string } | null;\n        },\n    ): Promise<void> => {\n        const session_state = user.session_state;\n        if (!session_state) {\n            return;\n        }\n        const logger = this._logger.create(\"_start\");\n\n        if (user.profile) {\n            this._sub = user.profile.sub;\n            this._sid = user.profile.sid;\n            logger.debug(\"session_state\", session_state, \", sub\", this._sub);\n        }\n        else {\n            this._sub = undefined;\n            this._sid = undefined;\n            logger.debug(\"session_state\", session_state, \", anonymous user\");\n        }\n\n        if (this._checkSessionIFrame) {\n            this._checkSessionIFrame.start(session_state);\n            return;\n        }\n\n        try {\n            const url = await this._userManager.metadataService.getCheckSessionIframe();\n            if (url) {\n                logger.debug(\"initializing check session iframe\");\n\n                const client_id = this._userManager.settings.client_id;\n                const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n                const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n\n                const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n                await checkSessionIFrame.load();\n                this._checkSessionIFrame = checkSessionIFrame;\n                checkSessionIFrame.start(session_state);\n            }\n            else {\n                logger.warn(\"no check session iframe found in the metadata\");\n            }\n        }\n        catch (err) {\n            // catch to suppress errors since we're in non-promise callback\n            logger.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n        }\n    };\n\n    protected _stop = (): void => {\n        const logger = this._logger.create(\"_stop\");\n        this._sub = undefined;\n        this._sid = undefined;\n\n        if (this._checkSessionIFrame) {\n            this._checkSessionIFrame.stop();\n        }\n\n        if (this._userManager.settings.monitorAnonymousSession) {\n            // using a timer to delay re-initialization to avoid race conditions during signout\n            // TODO rewrite to use promise correctly\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            const timerHandle = setInterval(async () => {\n                clearInterval(timerHandle);\n\n                try {\n                    const session = await this._userManager.querySessionStatus();\n                    if (session) {\n                        const tmpUser = {\n                            session_state: session.session_state,\n                            profile: session.sub && session.sid ? {\n                                sub: session.sub,\n                                sid: session.sid,\n                            } : null,\n                        };\n                        void this._start(tmpUser);\n                    }\n                }\n                catch (err) {\n                    // catch to suppress errors since we're in a callback\n                    logger.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n                }\n            }, 1000);\n        }\n    };\n\n    protected _callback = async (): Promise<void> => {\n        const logger = this._logger.create(\"_callback\");\n        try {\n            const session = await this._userManager.querySessionStatus();\n            let raiseEvent = true;\n\n            if (session && this._checkSessionIFrame) {\n                if (session.sub === this._sub) {\n                    raiseEvent = false;\n                    this._checkSessionIFrame.start(session.session_state);\n\n                    if (session.sid === this._sid) {\n                        logger.debug(\"same sub still logged in at OP, restarting check session iframe; session_state\", session.session_state);\n                    }\n                    else {\n                        logger.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n                        this._userManager.events._raiseUserSessionChanged();\n                    }\n                }\n                else {\n                    logger.debug(\"different subject signed into OP\", session.sub);\n                }\n            }\n            else {\n                logger.debug(\"subject no longer signed into OP\");\n            }\n\n            if (raiseEvent) {\n                if (this._sub) {\n                    this._userManager.events._raiseUserSignedOut();\n                }\n                else {\n                    this._userManager.events._raiseUserSignedIn();\n                }\n            } else {\n                logger.debug(\"no change in session detected, no event to raise\");\n            }\n        }\n        catch (err) {\n            if (this._sub) {\n                logger.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n                this._userManager.events._raiseUserSignedOut();\n            }\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport type { IdTokenClaims } from \"./Claims\";\n\n/**\n * Holds claims represented by a combination of the `id_token` and the user info endpoint.\n * @public\n */\nexport type UserProfile = IdTokenClaims;\n\n/**\n * @public\n */\nexport class User {\n    /**\n     * A JSON Web Token (JWT). Only provided if `openid` scope was requested.\n     * The application can access the data decoded by using the `profile` property.\n     */\n    public id_token?: string;\n\n    /** The session state value returned from the OIDC provider. */\n    public session_state: string | null;\n\n    /**\n     * The requested access token returned from the OIDC provider. The application can use this token to\n     * authenticate itself to the secured resource.\n     */\n    public access_token: string;\n\n    /**\n     * An OAuth 2.0 refresh token. The app can use this token to acquire additional access tokens after the\n     * current access token expires. Refresh tokens are long-lived and can be used to maintain access to resources\n     * for extended periods of time.\n     */\n    public refresh_token?: string;\n\n    /** Typically \"Bearer\" */\n    public token_type: string;\n\n    /** The scopes that the requested access token is valid for. */\n    public scope?: string;\n\n    /** The claims represented by a combination of the `id_token` and the user info endpoint. */\n    public profile: UserProfile;\n\n    /** The expires at returned from the OIDC provider. */\n    public expires_at?: number;\n\n    /** custom state data set during the initial signin request */\n    public readonly state: unknown;\n\n    public constructor(args: {\n        id_token?: string;\n        session_state?: string | null;\n        access_token: string;\n        refresh_token?: string;\n        token_type: string;\n        scope?: string;\n        profile: UserProfile;\n        expires_at?: number;\n        userState?: unknown;\n    }) {\n        this.id_token = args.id_token;\n        this.session_state = args.session_state ?? null;\n        this.access_token = args.access_token;\n        this.refresh_token = args.refresh_token;\n\n        this.token_type = args.token_type;\n        this.scope = args.scope;\n        this.profile = args.profile;\n        this.expires_at = args.expires_at;\n        this.state = args.userState;\n    }\n\n    /** Computed number of seconds the access token has remaining. */\n    public get expires_in(): number | undefined {\n        if (this.expires_at === undefined) {\n            return undefined;\n        }\n        return this.expires_at - Timer.getEpochTime();\n    }\n\n    public set expires_in(value: number | undefined) {\n        if (value !== undefined) {\n            this.expires_at = Math.floor(value) + Timer.getEpochTime();\n        }\n    }\n\n    /** Computed value indicating if the access token is expired. */\n    public get expired(): boolean | undefined {\n        const expires_in = this.expires_in;\n        if (expires_in === undefined) {\n            return undefined;\n        }\n        return expires_in <= 0;\n    }\n\n    /** Array representing the parsed values from the `scope`. */\n    public get scopes(): string[] {\n        return this.scope?.split(\" \") ?? [];\n    }\n\n    public toStorageString(): string {\n        new Logger(\"User\").create(\"toStorageString\");\n        return JSON.stringify({\n            id_token: this.id_token,\n            session_state: this.session_state,\n            access_token: this.access_token,\n            refresh_token: this.refresh_token,\n            token_type: this.token_type,\n            scope: this.scope,\n            profile: this.profile,\n            expires_at: this.expires_at,\n        });\n    }\n\n    public static fromStorageString(storageString: string): User {\n        Logger.createStatic(\"User\", \"fromStorageString\");\n        return new User(JSON.parse(storageString));\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Event, Logger, UrlUtils } from \"../utils\";\nimport type { IWindow, NavigateParams, NavigateResponse } from \"./IWindow\";\n\nconst messageSource = \"oidc-client\";\n\ninterface MessageData {\n    source: string;\n    url: string;\n    keepOpen: boolean;\n}\n\n/**\n * Window implementation which resolves via communication from a child window\n * via the `Window.postMessage()` interface.\n *\n * @internal\n */\nexport abstract class AbstractChildWindow implements IWindow {\n    protected abstract readonly _logger: Logger;\n    protected readonly _abort = new Event<[reason: Error]>(\"Window navigation aborted\");\n    protected readonly _disposeHandlers = new Set<() => void>();\n\n    protected _window: WindowProxy | null = null;\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"navigate\");\n        if (!this._window) {\n            throw new Error(\"Attempted to navigate on a disposed window\");\n        }\n\n        logger.debug(\"setting URL in window\");\n        this._window.location.replace(params.url);\n\n        const { url, keepOpen } = await new Promise<MessageData>((resolve, reject) => {\n            const listener = (e: MessageEvent) => {\n                const data: MessageData | undefined = e.data;\n                const origin = params.scriptOrigin ?? window.location.origin;\n                if (e.origin !== origin || data?.source !== messageSource) {\n                    // silently discard events not intended for us\n                    return;\n                }\n                try {\n                    const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n                    if (!state) {\n                        logger.warn(\"no state found in response url\");\n                    }\n                    if (e.source !== this._window && state !== params.state) {\n                        // MessageEvent source is a relatively modern feature, we can't rely on it\n                        // so we also inspect the payload for a matching state key as an alternative\n                        return;\n                    }\n                }\n                catch (err) {\n                    this._dispose();\n                    reject(new Error(\"Invalid response from window\"));\n                }\n                resolve(data);\n            };\n            window.addEventListener(\"message\", listener, false);\n            this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n            this._disposeHandlers.add(this._abort.addHandler((reason) => {\n                this._dispose();\n                reject(reason);\n            }));\n        });\n        logger.debug(\"got response from window\");\n        this._dispose();\n\n        if (!keepOpen) {\n            this.close();\n        }\n\n        return { url };\n    }\n\n    public abstract close(): void;\n\n    private _dispose(): void {\n        this._logger.create(\"_dispose\");\n\n        for (const dispose of this._disposeHandlers) {\n            dispose();\n        }\n        this._disposeHandlers.clear();\n    }\n\n    protected static _notifyParent(parent: Window, url: string, keepOpen = false, targetOrigin = window.location.origin): void {\n        parent.postMessage({\n            source: messageSource,\n            url,\n            keepOpen,\n        } as MessageData, targetOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { OidcClientSettings, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { PopupWindowFeatures } from \"./utils/PopupUtils\";\nimport { WebStorageStateStore } from \"./WebStorageStateStore\";\nimport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\n\nexport const DefaultPopupWindowFeatures: PopupWindowFeatures = {\n    location: false,\n    toolbar: false,\n    height: 640,\n};\nexport const DefaultPopupTarget = \"_blank\";\nconst DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nconst DefaultCheckSessionIntervalInSeconds = 2;\nexport const DefaultSilentRequestTimeoutInSeconds = 10;\n\n/**\n * The settings used to configure the {@link UserManager}.\n *\n * @public\n */\nexport interface UserManagerSettings extends OidcClientSettings {\n    /** The URL for the page containing the call to signinPopupCallback to handle the callback from the OIDC/OAuth2 */\n    popup_redirect_uri?: string;\n    popup_post_logout_redirect_uri?: string;\n    /**\n     * The features parameter to window.open for the popup signin window. By default, the popup is\n     * placed centered in front of the window opener.\n     * (default: \\{ location: false, menubar: false, height: 640 \\})\n     */\n    popupWindowFeatures?: PopupWindowFeatures;\n    /** The target parameter to window.open for the popup signin window (default: \"_blank\") */\n    popupWindowTarget?: string;\n    /** The methods window.location method used to redirect (default: \"assign\") */\n    redirectMethod?: \"replace\" | \"assign\";\n    /** The methods target window being redirected (default: \"self\") */\n    redirectTarget?: \"top\" | \"self\";\n\n    /** The target to pass while calling postMessage inside iframe for callback (default: window.location.origin) */\n    iframeNotifyParentOrigin?: string;\n\n    /** The script origin to check during 'message' callback execution while performing silent auth via iframe (default: window.location.origin) */\n    iframeScriptOrigin?: string;\n\n    /** The URL for the page containing the code handling the silent renew */\n    silent_redirect_uri?: string;\n    /** Number of seconds to wait for the silent renew to return before assuming it has failed or timed out (default: 10) */\n    silentRequestTimeoutInSeconds?: number;\n    /** Flag to indicate if there should be an automatic attempt to renew the access token prior to its expiration (default: true) */\n    automaticSilentRenew?: boolean;\n    /** Flag to validate user.profile.sub in silent renew calls (default: true) */\n    validateSubOnSilentRenew?: boolean;\n    /** Flag to control if id_token is included as id_token_hint in silent renew calls (default: false) */\n    includeIdTokenInSilentRenew?: boolean;\n\n    /** Will raise events for when user has performed a signout at the OP (default: false) */\n    monitorSession?: boolean;\n    monitorAnonymousSession?: boolean;\n    /** Interval in seconds to check the user's session (default: 2) */\n    checkSessionIntervalInSeconds?: number;\n    query_status_response_type?: string;\n    stopCheckSessionOnError?: boolean;\n\n    /**\n     * The `token_type_hint`s to pass to the authority server by default (default: [\"access_token\", \"refresh_token\"])\n     *\n     * Token types will be revoked in the same order as they are given here.\n     */\n    revokeTokenTypes?: (\"access_token\" | \"refresh_token\")[];\n    /** Will invoke the revocation endpoint on signout if there is an access token for the user (default: false) */\n    revokeTokensOnSignout?: boolean;\n    /** Flag to control if id_token is included as id_token_hint in silent signout calls (default: false) */\n    includeIdTokenInSilentSignout?: boolean;\n\n    /** The number of seconds before an access token is to expire to raise the accessTokenExpiring event (default: 60) */\n    accessTokenExpiringNotificationTimeInSeconds?: number;\n\n    /**\n     * Storage object used to persist User for currently authenticated user (default: window.sessionStorage, InMemoryWebStorage iff no window).\n     *  E.g. `userStore: new WebStorageStateStore({ store: window.localStorage })`\n     */\n    userStore?: WebStorageStateStore;\n}\n\n/**\n * The settings with defaults applied of the {@link UserManager}.\n * @see {@link UserManagerSettings}\n *\n * @public\n */\nexport class UserManagerSettingsStore extends OidcClientSettingsStore {\n    public readonly popup_redirect_uri: string;\n    public readonly popup_post_logout_redirect_uri: string | undefined;\n    public readonly popupWindowFeatures: PopupWindowFeatures;\n    public readonly popupWindowTarget: string;\n    public readonly redirectMethod: \"replace\" | \"assign\";\n    public readonly redirectTarget: \"top\" | \"self\";\n\n    public readonly iframeNotifyParentOrigin: string | undefined;\n    public readonly iframeScriptOrigin: string | undefined;\n\n    public readonly silent_redirect_uri: string;\n    public readonly silentRequestTimeoutInSeconds: number;\n    public readonly automaticSilentRenew: boolean;\n    public readonly validateSubOnSilentRenew: boolean;\n    public readonly includeIdTokenInSilentRenew: boolean;\n\n    public readonly monitorSession: boolean;\n    public readonly monitorAnonymousSession: boolean;\n    public readonly checkSessionIntervalInSeconds: number;\n    public readonly query_status_response_type: string;\n    public readonly stopCheckSessionOnError: boolean;\n\n    public readonly revokeTokenTypes: (\"access_token\" | \"refresh_token\")[];\n    public readonly revokeTokensOnSignout: boolean;\n    public readonly includeIdTokenInSilentSignout: boolean;\n\n    public readonly accessTokenExpiringNotificationTimeInSeconds: number;\n\n    public readonly userStore: WebStorageStateStore;\n\n    public constructor(args: UserManagerSettings) {\n        const {\n            popup_redirect_uri = args.redirect_uri,\n            popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n            popupWindowFeatures = DefaultPopupWindowFeatures,\n            popupWindowTarget = DefaultPopupTarget,\n            redirectMethod = \"assign\",\n            redirectTarget = \"self\",\n\n            iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n            iframeScriptOrigin = args.iframeScriptOrigin,\n\n            silent_redirect_uri = args.redirect_uri,\n            silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n            automaticSilentRenew = true,\n            validateSubOnSilentRenew = true,\n            includeIdTokenInSilentRenew = false,\n\n            monitorSession = false,\n            monitorAnonymousSession = false,\n            checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n            query_status_response_type = \"code\",\n            stopCheckSessionOnError = true,\n\n            revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n            revokeTokensOnSignout = false,\n            includeIdTokenInSilentSignout = false,\n\n            accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n\n            userStore,\n        } = args;\n\n        super(args);\n\n        this.popup_redirect_uri = popup_redirect_uri;\n        this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n        this.popupWindowFeatures = popupWindowFeatures;\n        this.popupWindowTarget = popupWindowTarget;\n        this.redirectMethod = redirectMethod;\n        this.redirectTarget = redirectTarget;\n\n        this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n        this.iframeScriptOrigin = iframeScriptOrigin;\n\n        this.silent_redirect_uri = silent_redirect_uri;\n        this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds;\n        this.automaticSilentRenew = automaticSilentRenew;\n        this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n        this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n\n        this.monitorSession = monitorSession;\n        this.monitorAnonymousSession = monitorAnonymousSession;\n        this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n        this.stopCheckSessionOnError = stopCheckSessionOnError;\n        this.query_status_response_type = query_status_response_type;\n\n        this.revokeTokenTypes = revokeTokenTypes;\n        this.revokeTokensOnSignout = revokeTokensOnSignout;\n        this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n\n        this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n\n        if (userStore) {\n            this.userStore = userStore;\n        }\n        else {\n            const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n            this.userStore = new WebStorageStateStore({ store });\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport { ErrorTimeout } from \"../errors\";\nimport type { NavigateParams, NavigateResponse } from \"./IWindow\";\nimport { AbstractChildWindow } from \"./AbstractChildWindow\";\nimport { DefaultSilentRequestTimeoutInSeconds } from \"../UserManagerSettings\";\n\n/**\n * @public\n */\nexport interface IFrameWindowParams {\n    silentRequestTimeoutInSeconds?: number;\n}\n\n/**\n * @internal\n */\nexport class IFrameWindow extends AbstractChildWindow {\n    protected readonly _logger = new Logger(\"IFrameWindow\");\n    private _frame: HTMLIFrameElement | null;\n    private _timeoutInSeconds: number;\n\n    public constructor({\n        silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n    }: IFrameWindowParams) {\n        super();\n        this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n\n        this._frame = IFrameWindow.createHiddenIframe();\n        this._window = this._frame.contentWindow;\n    }\n\n    private static createHiddenIframe(): HTMLIFrameElement {\n        const iframe = window.document.createElement(\"iframe\");\n\n        // shotgun approach\n        iframe.style.visibility = \"hidden\";\n        iframe.style.position = \"fixed\";\n        iframe.style.left = \"-1000px\";\n        iframe.style.top = \"0\";\n        iframe.width = \"0\";\n        iframe.height = \"0\";\n        iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n\n        window.document.body.appendChild(iframe);\n        return iframe;\n    }\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n        const timer = setTimeout(() => this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1000);\n        this._disposeHandlers.add(() => clearTimeout(timer));\n\n        return await super.navigate(params);\n    }\n\n    public close(): void {\n        if (this._frame) {\n            if (this._frame.parentNode) {\n                this._frame.addEventListener(\"load\", (ev) => {\n                    const frame = ev.target as HTMLIFrameElement;\n                    frame.parentNode?.removeChild(frame);\n                    this._abort.raise(new Error(\"IFrame removed from DOM\"));\n                }, true);\n                this._frame.contentWindow?.location.replace(\"about:blank\");\n            }\n            this._frame = null;\n        }\n        this._window = null;\n    }\n\n    public static notifyParent(url: string, targetOrigin?: string): void {\n        return super._notifyParent(window.parent, url, false, targetOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\nimport { IFrameWindow, IFrameWindowParams } from \"./IFrameWindow\";\nimport type { INavigator } from \"./INavigator\";\n\n/**\n * @internal\n */\nexport class IFrameNavigator implements INavigator {\n    private readonly _logger = new Logger(\"IFrameNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds,\n    }: IFrameWindowParams): Promise<IFrameWindow> {\n        return new IFrameWindow({ silentRequestTimeoutInSeconds });\n    }\n\n    public async callback(url: string): Promise<void> {\n        this._logger.create(\"callback\");\n        IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, PopupUtils, PopupWindowFeatures } from \"../utils\";\nimport { DefaultPopupWindowFeatures, DefaultPopupTarget } from \"../UserManagerSettings\";\nimport { AbstractChildWindow } from \"./AbstractChildWindow\";\nimport type { NavigateParams, NavigateResponse } from \"./IWindow\";\n\nconst checkForPopupClosedInterval = 500;\n\n/**\n * @public\n */\nexport interface PopupWindowParams {\n    popupWindowFeatures?: PopupWindowFeatures;\n    popupWindowTarget?: string;\n}\n\n/**\n * @internal\n */\nexport class PopupWindow extends AbstractChildWindow {\n    protected readonly _logger = new Logger(\"PopupWindow\");\n\n    protected _window: WindowProxy | null;\n\n    public constructor({\n        popupWindowTarget = DefaultPopupTarget,\n        popupWindowFeatures = {},\n    }: PopupWindowParams) {\n        super();\n        const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n        this._window = window.open(undefined, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n    }\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        this._window?.focus();\n\n        const popupClosedInterval = setInterval(() => {\n            if (!this._window || this._window.closed) {\n                this._abort.raise(new Error(\"Popup closed by user\"));\n            }\n        }, checkForPopupClosedInterval);\n        this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n\n        return await super.navigate(params);\n    }\n\n    public close(): void {\n        if (this._window) {\n            if (!this._window.closed) {\n                this._window.close();\n                this._abort.raise(new Error(\"Popup closed\"));\n            }\n        }\n        this._window = null;\n    }\n\n    public static notifyOpener(url: string, keepOpen: boolean): void {\n        if (!window.opener) {\n            throw new Error(\"No window.opener. Can't complete notification.\");\n        }\n        return super._notifyParent(window.opener, url, keepOpen);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport { PopupWindow, PopupWindowParams } from \"./PopupWindow\";\nimport type { INavigator } from \"./INavigator\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\n\n/**\n * @internal\n */\nexport class PopupNavigator implements INavigator {\n    private readonly _logger = new Logger(\"PopupNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        popupWindowFeatures = this._settings.popupWindowFeatures,\n        popupWindowTarget = this._settings.popupWindowTarget,\n    }: PopupWindowParams): Promise<PopupWindow> {\n        return new PopupWindow({ popupWindowFeatures, popupWindowTarget });\n    }\n\n    public async callback(url: string, keepOpen = false): Promise<void> {\n        this._logger.create(\"callback\");\n\n        PopupWindow.notifyOpener(url, keepOpen);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\nimport type { INavigator } from \"./INavigator\";\nimport type { IWindow } from \"./IWindow\";\n\n/**\n * @public\n */\nexport interface RedirectParams {\n    redirectMethod?: \"replace\" | \"assign\";\n    redirectTarget?: \"top\" | \"self\";\n}\n\n/**\n * @internal\n */\nexport class RedirectNavigator implements INavigator {\n    private readonly _logger = new Logger(\"RedirectNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        redirectMethod = this._settings.redirectMethod,\n        redirectTarget = this._settings.redirectTarget,\n    }: RedirectParams): Promise<IWindow> {\n        this._logger.create(\"prepare\");\n        let targetWindow = window.self as Window;\n\n        if (redirectTarget === \"top\") {\n            targetWindow = window.top ?? window.self;\n        }\n    \n        const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location) as (url: string) => never;\n        let abort: (reason: Error) => void;\n        return {\n            navigate: async (params): Promise<never> => {\n                this._logger.create(\"navigate\");\n                // We use a promise that never resolves to block the caller\n                const promise = new Promise((resolve, reject) => {\n                    abort = reject;\n                });\n                redirect(params.url);\n                return await (promise as Promise<never>);\n            },\n            close: () => {\n                this._logger.create(\"close\");\n                abort?.(new Error(\"Redirect aborted\"));\n                targetWindow.stop();\n            },\n        };\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Event } from \"./utils\";\nimport { AccessTokenEvents } from \"./AccessTokenEvents\";\nimport type { UserManagerSettingsStore } from \"./UserManagerSettings\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport type UserLoadedCallback = (user: User) => Promise<void> | void;\n/**\n * @public\n */\nexport type UserUnloadedCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type SilentRenewErrorCallback = (error: Error) => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSignedInCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSignedOutCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSessionChangedCallback = () => Promise<void> | void;\n\n/**\n * @public\n */\nexport class UserManagerEvents extends AccessTokenEvents {\n    protected readonly _logger = new Logger(\"UserManagerEvents\");\n\n    private readonly _userLoaded = new Event<[User]>(\"User loaded\");\n    private readonly _userUnloaded = new Event<[]>(\"User unloaded\");\n    private readonly _silentRenewError = new Event<[Error]>(\"Silent renew error\");\n    private readonly _userSignedIn = new Event<[]>(\"User signed in\");\n    private readonly _userSignedOut = new Event<[]>(\"User signed out\");\n    private readonly _userSessionChanged = new Event<[]>(\"User session changed\");\n\n    public constructor(settings: UserManagerSettingsStore) {\n        super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    }\n\n    public load(user: User, raiseEvent=true): void {\n        super.load(user);\n        if (raiseEvent) {\n            this._userLoaded.raise(user);\n        }\n    }\n    public unload(): void {\n        super.unload();\n        this._userUnloaded.raise();\n    }\n\n    /**\n     * Add callback: Raised when a user session has been established (or re-established).\n     */\n    public addUserLoaded(cb: UserLoadedCallback): () => void {\n        return this._userLoaded.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when a user session has been established (or re-established).\n     */\n    public removeUserLoaded(cb: UserLoadedCallback): void {\n        return this._userLoaded.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised when a user session has been terminated.\n     */\n    public addUserUnloaded(cb: UserUnloadedCallback): () => void {\n        return this._userUnloaded.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when a user session has been terminated.\n     */\n    public removeUserUnloaded(cb: UserUnloadedCallback): void {\n        return this._userUnloaded.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised when the automatic silent renew has failed.\n     */\n    public addSilentRenewError(cb: SilentRenewErrorCallback): () => void {\n        return this._silentRenewError.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the automatic silent renew has failed.\n     */\n    public removeSilentRenewError(cb: SilentRenewErrorCallback): void {\n        return this._silentRenewError.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseSilentRenewError(e: Error): void {\n        this._silentRenewError.raise(e);\n    }\n\n    /**\n     * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSignedIn(cb: UserSignedInCallback): () => void {\n        return this._userSignedIn.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n     */\n    public removeUserSignedIn(cb: UserSignedInCallback): void {\n        this._userSignedIn.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseUserSignedIn(): void {\n        this._userSignedIn.raise();\n    }\n\n    /**\n     * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSignedOut(cb: UserSignedOutCallback): () => void {\n        return this._userSignedOut.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n     */\n    public removeUserSignedOut(cb: UserSignedOutCallback): void {\n        this._userSignedOut.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseUserSignedOut(): void {\n        this._userSignedOut.raise();\n    }\n\n    /**\n     * Add callback: Raised when the user session changed (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSessionChanged(cb: UserSessionChangedCallback): () => void {\n        return this._userSessionChanged.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n     */\n    public removeUserSessionChanged(cb: UserSessionChangedCallback): void {\n        this._userSessionChanged.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public _raiseUserSessionChanged(): void {\n        this._userSessionChanged.raise();\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport { ErrorTimeout } from \"./errors\";\nimport type { UserManager } from \"./UserManager\";\nimport type { AccessTokenCallback } from \"./AccessTokenEvents\";\n\n/**\n * @internal\n */\nexport class SilentRenewService {\n    protected _logger = new Logger(\"SilentRenewService\");\n    private _isStarted = false;\n    private readonly _retryTimer = new Timer(\"Retry Silent Renew\");\n\n    public constructor(private _userManager: UserManager) {}\n\n    public async start(): Promise<void> {\n        const logger = this._logger.create(\"start\");\n        if (!this._isStarted) {\n            this._isStarted = true;\n            this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n            this._retryTimer.addHandler(this._tokenExpiring);\n\n            // this will trigger loading of the user so the expiring events can be initialized\n            try {\n                await this._userManager.getUser();\n                // deliberate nop\n            }\n            catch (err) {\n                // catch to suppress errors since we're in a ctor\n                logger.error(\"getUser error\", err);\n            }\n        }\n    }\n\n    public stop(): void {\n        if (this._isStarted) {\n            this._retryTimer.cancel();\n            this._retryTimer.removeHandler(this._tokenExpiring);\n            this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n            this._isStarted = false;\n        }\n    }\n\n    protected _tokenExpiring: AccessTokenCallback = async () => {\n        const logger = this._logger.create(\"_tokenExpiring\");\n        try {\n            await this._userManager.signinSilent();\n            logger.debug(\"silent token renewal successful\");\n        }\n        catch (err) {\n            if (err instanceof ErrorTimeout) {\n                // no response from authority server, e.g. IFrame timeout, ...\n                logger.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n                this._retryTimer.init(5);\n                return;\n            }\n\n            logger.error(\"Error from signinSilent:\", err);\n            this._userManager.events._raiseSilentRenewError(err as Error);\n        }\n    };\n}\n","// Copyright (C) AuthTS Contributors\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport type { UserProfile } from \"./User\";\n\n/**\n * Fake state store implementation necessary for validating refresh token requests.\n *\n * @internal\n */\nexport class RefreshState {\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    public readonly data: unknown | undefined;\n\n    public readonly refresh_token: string;\n    public readonly id_token?: string;\n    public readonly session_state: string | null;\n    public readonly scope?: string;\n    public readonly profile: UserProfile;\n\n    constructor(args: {\n        refresh_token: string;\n        id_token?: string;\n        session_state: string | null;\n        scope?: string;\n        profile: UserProfile;\n\n        state?: unknown;\n    }) {\n        this.refresh_token = args.refresh_token;\n        this.id_token = args.id_token;\n        this.session_state = args.session_state;\n        this.scope = args.scope;\n        this.profile = args.profile;\n\n        this.data = args.state;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport { IFrameNavigator, NavigateResponse, PopupNavigator, RedirectNavigator, PopupWindowParams,\n    IWindow, IFrameWindowParams, RedirectParams } from \"./navigators\";\nimport { OidcClient, CreateSigninRequestArgs, CreateSignoutRequestArgs, ProcessResourceOwnerPasswordCredentialsArgs } from \"./OidcClient\";\nimport { UserManagerSettings, UserManagerSettingsStore } from \"./UserManagerSettings\";\nimport { User } from \"./User\";\nimport { UserManagerEvents } from \"./UserManagerEvents\";\nimport { SilentRenewService } from \"./SilentRenewService\";\nimport { SessionMonitor } from \"./SessionMonitor\";\nimport type { SessionStatus } from \"./SessionStatus\";\nimport type { SignoutResponse } from \"./SignoutResponse\";\nimport type { MetadataService } from \"./MetadataService\";\nimport { RefreshState } from \"./RefreshState\";\nimport type { SigninResponse } from \"./SigninResponse\";\n\n/**\n * @public\n */\nexport type ExtraSigninRequestArgs = Pick<CreateSigninRequestArgs, \"nonce\" | \"extraQueryParams\" | \"extraTokenParams\" | \"state\" | \"redirect_uri\" | \"prompt\" | \"acr_values\" | \"login_hint\" | \"scope\" | \"max_age\" >;\n/**\n * @public\n */\nexport type ExtraSignoutRequestArgs = Pick<CreateSignoutRequestArgs, \"extraQueryParams\" | \"state\" | \"id_token_hint\" | \"post_logout_redirect_uri\">;\n\n/**\n * @public\n */\nexport type RevokeTokensTypes = UserManagerSettings[\"revokeTokenTypes\"];\n\n/**\n * @public\n */\nexport type SigninRedirectArgs = RedirectParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninPopupArgs = PopupWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninSilentArgs = IFrameWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninResourceOwnerCredentialsArgs = ProcessResourceOwnerPasswordCredentialsArgs;\n\n/**\n * @public\n */\nexport type QuerySessionStatusArgs = IFrameWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutRedirectArgs = RedirectParams & ExtraSignoutRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutPopupArgs = PopupWindowParams & ExtraSignoutRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutSilentArgs = IFrameWindowParams & ExtraSignoutRequestArgs;\n\n/**\n * Provides a higher level API for signing a user in, signing out, managing the user's claims returned from the OIDC provider,\n * and managing an access token returned from the OIDC/OAuth2 provider.\n *\n * @public\n */\nexport class UserManager {\n    /** Returns the settings used to configure the `UserManager`. */\n    public readonly settings: UserManagerSettingsStore;\n    protected readonly _logger = new Logger(\"UserManager\");\n\n    protected readonly _client: OidcClient;\n    protected readonly _redirectNavigator: RedirectNavigator;\n    protected readonly _popupNavigator: PopupNavigator;\n    protected readonly _iframeNavigator: IFrameNavigator;\n    protected readonly _events: UserManagerEvents;\n    protected readonly _silentRenewService: SilentRenewService;\n    protected readonly _sessionMonitor: SessionMonitor | null;\n\n    public constructor(settings: UserManagerSettings) {\n        this.settings = new UserManagerSettingsStore(settings);\n\n        this._client = new OidcClient(settings);\n\n        this._redirectNavigator = new RedirectNavigator(this.settings);\n        this._popupNavigator = new PopupNavigator(this.settings);\n        this._iframeNavigator = new IFrameNavigator(this.settings);\n\n        this._events = new UserManagerEvents(this.settings);\n        this._silentRenewService = new SilentRenewService(this);\n\n        // order is important for the following properties; these services depend upon the events.\n        if (this.settings.automaticSilentRenew) {\n            this.startSilentRenew();\n        }\n\n        this._sessionMonitor = null;\n        if (this.settings.monitorSession) {\n            this._sessionMonitor = new SessionMonitor(this);\n        }\n\n    }\n\n    /** Returns an object used to register for events raised by the `UserManager`. */\n    public get events(): UserManagerEvents {\n        return this._events;\n    }\n\n    /** Returns an object used to access the metadata configuration of the OIDC provider. */\n    public get metadataService(): MetadataService {\n        return this._client.metadataService;\n    }\n\n    /**\n     * Returns promise to load the `User` object for the currently authenticated user.\n     */\n    public async getUser(): Promise<User | null> {\n        const logger = this._logger.create(\"getUser\");\n        const user = await this._loadUser();\n        if (user) {\n            logger.info(\"user loaded\");\n            this._events.load(user, false);\n            return user;\n        }\n\n        logger.info(\"user not found in storage\");\n        return null;\n    }\n\n    /**\n     * Returns promise to remove from any storage the currently authenticated user.\n     */\n    public async removeUser(): Promise<void> {\n        const logger = this._logger.create(\"removeUser\");\n        await this.storeUser(null);\n        logger.info(\"user removed from storage\");\n        this._events.unload();\n    }\n\n    /**\n     * Returns promise to trigger a redirect of the current window to the authorization endpoint.\n     */\n    public async signinRedirect(args: SigninRedirectArgs = {}): Promise<void> {\n        this._logger.create(\"signinRedirect\");\n        const {\n            redirectMethod,\n            ...requestArgs\n        } = args;\n        const handle = await this._redirectNavigator.prepare({ redirectMethod });\n        await this._signinStart({\n            request_type: \"si:r\",\n            ...requestArgs,\n        }, handle);\n    }\n\n    /**\n     * Returns promise to process response from the authorization endpoint. The result of the promise is the authenticated `User`.\n     */\n    public async signinRedirectCallback(url = window.location.href): Promise<User> {\n        const logger = this._logger.create(\"signinRedirectCallback\");\n        const user = await this._signinEnd(url);\n        if (user.profile && user.profile.sub) {\n            logger.info(\"success, signed in subject\", user.profile.sub);\n        }\n        else {\n            logger.info(\"no subject\");\n        }\n\n        return user;\n    }\n\n    /**\n     * Returns promise to process the signin with user/password. The result of the promise is the authenticated `User`.\n     *\n     * Throws an ErrorResponse in case of wrong authentication.\n     */\n    public async signinResourceOwnerCredentials({\n        username,\n        password,\n        skipUserInfo = false,\n    }: SigninResourceOwnerCredentialsArgs ) {\n        const logger = this._logger.create(\"signinResourceOwnerCredential\");\n\n        const signinResponse = await this._client.processResourceOwnerPasswordCredentials({ username, password, skipUserInfo, extraTokenParams: this.settings.extraTokenParams });\n        logger.debug(\"got signin response\");\n\n        const user = await this._buildUser(signinResponse);\n        if (user.profile && user.profile.sub) {\n            logger.info(\"success, signed in subject\", user.profile.sub);\n        } else {\n            logger.info(\"no subject\");\n        }\n        return user;\n    }\n\n    /**\n     * Returns promise to trigger a request (via a popup window) to the authorization endpoint. The result of the promise is the authenticated `User`.\n     */\n    public async signinPopup(args: SigninPopupArgs = {}): Promise<User> {\n        const logger = this._logger.create(\"signinPopup\");\n        const {\n            popupWindowFeatures,\n            popupWindowTarget,\n            ...requestArgs\n        } = args;\n        const url = this.settings.popup_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No popup_redirect_uri configured\"));\n        }\n\n        const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n        const user = await this._signin({\n            request_type: \"si:p\",\n            redirect_uri: url,\n            display: \"popup\",\n            ...requestArgs,\n        }, handle);\n        if (user) {\n            if (user.profile && user.profile.sub) {\n                logger.info(\"success, signed in subject\", user.profile.sub);\n            }\n            else {\n                logger.info(\"no subject\");\n            }\n        }\n\n        return user;\n    }\n    /**\n     * Returns promise to notify the opening window of response from the authorization endpoint.\n     */\n    public async signinPopupCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const logger = this._logger.create(\"signinPopupCallback\");\n        await this._popupNavigator.callback(url, keepOpen);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to trigger a silent request (via an iframe) to the authorization endpoint.\n     * The result of the promise is the authenticated `User`.\n     */\n    public async signinSilent(args: SigninSilentArgs = {}): Promise<User | null> {\n        const logger = this._logger.create(\"signinSilent\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n        // first determine if we have a refresh token, or need to use iframe\n        let user = await this._loadUser();\n        if (user?.refresh_token) {\n            logger.debug(\"using refresh token\");\n            const state = new RefreshState(user as Required<User>);\n            return await this._useRefreshToken(state);\n        }\n\n        const url = this.settings.silent_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No silent_redirect_uri configured\"));\n        }\n\n        let verifySub: string | undefined;\n        if (user && this.settings.validateSubOnSilentRenew) {\n            logger.debug(\"subject prior to silent renew:\", user.profile.sub);\n            verifySub = user.profile.sub;\n        }\n\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        user = await this._signin({\n            request_type: \"si:s\",\n            redirect_uri: url,\n            prompt: \"none\",\n            id_token_hint: this.settings.includeIdTokenInSilentRenew ? user?.id_token : undefined,\n            ...requestArgs,\n        }, handle, verifySub);\n        if (user) {\n            if (user.profile?.sub) {\n                logger.info(\"success, signed in subject\", user.profile.sub);\n            }\n            else {\n                logger.info(\"no subject\");\n            }\n        }\n\n        return user;\n    }\n\n    protected async _useRefreshToken(state: RefreshState): Promise<User> {\n        const response = await this._client.useRefreshToken({\n            state,\n            timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n        });\n        const user = new User({ ...state, ...response });\n\n        await this.storeUser(user);\n        this._events.load(user);\n        return user;\n    }\n\n    /**\n     * Returns promise to notify the parent window of response from the authorization endpoint.\n     */\n    public async signinSilentCallback(url = window.location.href): Promise<void> {\n        const logger = this._logger.create(\"signinSilentCallback\");\n        await this._iframeNavigator.callback(url);\n        logger.info(\"success\");\n    }\n\n    public async signinCallback(url = window.location.href): Promise<User | void> {\n        const { state } = await this._client.readSigninResponseState(url);\n        switch (state.request_type) {\n            case \"si:r\":\n                return await this.signinRedirectCallback(url);\n            case \"si:p\":\n                return await this.signinPopupCallback(url);\n            case \"si:s\":\n                return await this.signinSilentCallback(url);\n            default:\n                throw new Error(\"invalid response_type in state\");\n        }\n    }\n\n    public async signoutCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const { state } = await this._client.readSignoutResponseState(url);\n        if (!state) {\n            return;\n        }\n\n        switch (state.request_type) {\n            case \"so:r\":\n                await this.signoutRedirectCallback(url);\n                break;\n            case \"so:p\":\n                await this.signoutPopupCallback(url, keepOpen);\n                break;\n            case \"so:s\":\n                await this.signoutSilentCallback(url);\n                break;\n            default:\n                throw new Error(\"invalid response_type in state\");\n        }\n    }\n\n    /**\n     * Returns promise to query OP for user's current signin status. Returns object with session_state and subject identifier.\n     */\n    public async querySessionStatus(args: QuerySessionStatusArgs = {}): Promise<SessionStatus | null> {\n        const logger = this._logger.create(\"querySessionStatus\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n        const url = this.settings.silent_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No silent_redirect_uri configured\"));\n        }\n\n        const user = await this._loadUser();\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        const navResponse = await this._signinStart({\n            request_type: \"si:s\", // this acts like a signin silent\n            redirect_uri: url,\n            prompt: \"none\",\n            id_token_hint: this.settings.includeIdTokenInSilentRenew ? user?.id_token : undefined,\n            response_type: this.settings.query_status_response_type,\n            scope: \"openid\",\n            skipUserInfo: true,\n            ...requestArgs,\n        }, handle);\n        try {\n            const signinResponse = await this._client.processSigninResponse(navResponse.url);\n            logger.debug(\"got signin response\");\n\n            if (signinResponse.session_state && signinResponse.profile.sub) {\n                logger.info(\"success for subject\", signinResponse.profile.sub);\n                return {\n                    session_state: signinResponse.session_state,\n                    sub: signinResponse.profile.sub,\n                    sid: signinResponse.profile.sid,\n                };\n            }\n\n            logger.info(\"success, user not authenticated\");\n            return null;\n        }\n        catch (err) {\n            if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n                switch (err.error) {\n                    case \"login_required\":\n                    case \"consent_required\":\n                    case \"interaction_required\":\n                    case \"account_selection_required\":\n                        logger.info(\"success for anonymous user\");\n                        return {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            session_state: err.session_state!,\n                        };\n                }\n            }\n            throw err;\n        }\n    }\n\n    protected async _signin(args: CreateSigninRequestArgs, handle: IWindow, verifySub?: string): Promise<User> {\n        const navResponse = await this._signinStart(args, handle);\n        return await this._signinEnd(navResponse.url, verifySub);\n    }\n    protected async _signinStart(args: CreateSigninRequestArgs, handle: IWindow): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"_signinStart\");\n\n        try {\n            const signinRequest = await this._client.createSigninRequest(args);\n            logger.debug(\"got signin request\");\n\n            return await handle.navigate({\n                url: signinRequest.url,\n                state: signinRequest.state.id,\n                response_mode: signinRequest.state.response_mode,\n                scriptOrigin: this.settings.iframeScriptOrigin,\n            });\n        }\n        catch (err) {\n            logger.debug(\"error after preparing navigator, closing navigator window\");\n            handle.close();\n            throw err;\n        }\n    }\n    protected async _signinEnd(url: string, verifySub?: string): Promise<User> {\n        const logger = this._logger.create(\"_signinEnd\");\n        const signinResponse = await this._client.processSigninResponse(url);\n        logger.debug(\"got signin response\");\n\n        const user = await this._buildUser(signinResponse, verifySub);\n        return user;\n    }\n\n    protected async _buildUser(signinResponse: SigninResponse, verifySub?: string) {\n        const logger = this._logger.create(\"_buildUser\");\n        const user = new User(signinResponse);\n        if (verifySub) {\n            if (verifySub !== user.profile.sub) {\n                logger.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n                throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n            }\n            logger.debug(\"current user matches user returned from signin\");\n        }\n\n        await this.storeUser(user);\n        logger.debug(\"user stored\");\n        this._events.load(user);\n\n        return user;\n    }\n\n    /**\n     * Returns promise to trigger a redirect of the current window to the end session endpoint.\n     */\n    public async signoutRedirect(args: SignoutRedirectArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutRedirect\");\n        const {\n            redirectMethod,\n            ...requestArgs\n        } = args;\n        const handle = await this._redirectNavigator.prepare({ redirectMethod });\n        await this._signoutStart({\n            request_type: \"so:r\",\n            post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n            ...requestArgs,\n        }, handle);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to process response from the end session endpoint.\n     */\n    public async signoutRedirectCallback(url = window.location.href): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"signoutRedirectCallback\");\n        const response = await this._signoutEnd(url);\n        logger.info(\"success\");\n        return response;\n    }\n\n    /**\n     * Returns promise to trigger a redirect of a popup window window to the end session endpoint.\n     */\n    public async signoutPopup(args: SignoutPopupArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutPopup\");\n        const {\n            popupWindowFeatures,\n            popupWindowTarget,\n            ...requestArgs\n        } = args;\n        const url = this.settings.popup_post_logout_redirect_uri;\n\n        const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n        await this._signout({\n            request_type: \"so:p\",\n            post_logout_redirect_uri: url,\n            // we're putting a dummy entry in here because we\n            // need a unique id from the state for notification\n            // to the parent window, which is necessary if we\n            // plan to return back to the client after signout\n            // and so we can close the popup after signout\n            state: url == null ? undefined : {},\n            ...requestArgs,\n        }, handle);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to process response from the end session endpoint from a popup window.\n     */\n    public async signoutPopupCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const logger = this._logger.create(\"signoutPopupCallback\");\n        await this._popupNavigator.callback(url, keepOpen);\n        logger.info(\"success\");\n    }\n\n    protected async _signout(args: CreateSignoutRequestArgs, handle: IWindow): Promise<SignoutResponse> {\n        const navResponse = await this._signoutStart(args, handle);\n        return await this._signoutEnd(navResponse.url);\n    }\n    protected async _signoutStart(args: CreateSignoutRequestArgs = {}, handle: IWindow): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"_signoutStart\");\n\n        try {\n            const user = await this._loadUser();\n            logger.debug(\"loaded current user from storage\");\n\n            if (this.settings.revokeTokensOnSignout) {\n                await this._revokeInternal(user);\n            }\n\n            const id_token = args.id_token_hint || user && user.id_token;\n            if (id_token) {\n                logger.debug(\"setting id_token_hint in signout request\");\n                args.id_token_hint = id_token;\n            }\n\n            await this.removeUser();\n            logger.debug(\"user removed, creating signout request\");\n\n            const signoutRequest = await this._client.createSignoutRequest(args);\n            logger.debug(\"got signout request\");\n\n            return await handle.navigate({\n                url: signoutRequest.url,\n                state: signoutRequest.state?.id,\n            });\n        }\n        catch (err) {\n            logger.debug(\"error after preparing navigator, closing navigator window\");\n            handle.close();\n            throw err;\n        }\n    }\n    protected async _signoutEnd(url: string): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"_signoutEnd\");\n        const signoutResponse = await this._client.processSignoutResponse(url);\n        logger.debug(\"got signout response\");\n\n        return signoutResponse;\n    }\n\n    /**\n     * Returns promise to trigger a silent request (via an iframe) to the end session endpoint.\n     */\n    public async signoutSilent(args: SignoutSilentArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutSilent\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n\n        const id_token_hint = this.settings.includeIdTokenInSilentSignout\n            ? (await this._loadUser())?.id_token\n            : undefined;\n\n        const url = this.settings.popup_post_logout_redirect_uri;\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        await this._signout({\n            request_type: \"so:s\",\n            post_logout_redirect_uri: url,\n            id_token_hint: id_token_hint,\n            ...requestArgs,\n        }, handle);\n\n        logger.info(\"success\");\n    }\n\n    /**\n     * Returns promise to notify the parent window of response from the end session endpoint.\n     */\n    public async signoutSilentCallback(url = window.location.href): Promise<void> {\n        const logger = this._logger.create(\"signoutSilentCallback\");\n        await this._iframeNavigator.callback(url);\n        logger.info(\"success\");\n    }\n\n    public async revokeTokens(types?: RevokeTokensTypes): Promise<void> {\n        const user = await this._loadUser();\n        await this._revokeInternal(user, types);\n    }\n\n    protected async _revokeInternal(user: User | null, types = this.settings.revokeTokenTypes): Promise<void> {\n        const logger = this._logger.create(\"_revokeInternal\");\n        if (!user) return;\n\n        const typesPresent = types.filter(type => typeof user[type] === \"string\");\n\n        if (!typesPresent.length) {\n            logger.debug(\"no need to revoke due to no token(s)\");\n            return;\n        }\n\n        // don't Promise.all, order matters\n        for (const type of typesPresent) {\n            await this._client.revokeToken(\n                user[type]!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                type,\n            );\n            logger.info(`${type} revoked successfully`);\n            if (type !== \"access_token\") {\n                user[type] = null as never;\n            }\n        }\n\n        await this.storeUser(user);\n        logger.debug(\"user stored\");\n        this._events.load(user);\n    }\n\n    /**\n     * Enables silent renew for the `UserManager`.\n     */\n    public startSilentRenew(): void {\n        this._logger.create(\"startSilentRenew\");\n        void this._silentRenewService.start();\n    }\n\n    /**\n     * Disables silent renew for the `UserManager`.\n     */\n    public stopSilentRenew(): void {\n        this._silentRenewService.stop();\n    }\n\n    protected get _userStoreKey(): string {\n        return `user:${this.settings.authority}:${this.settings.client_id}`;\n    }\n\n    protected async _loadUser(): Promise<User | null> {\n        const logger = this._logger.create(\"_loadUser\");\n        const storageString = await this.settings.userStore.get(this._userStoreKey);\n        if (storageString) {\n            logger.debug(\"user storageString loaded\");\n            return User.fromStorageString(storageString);\n        }\n\n        logger.debug(\"no user storageString\");\n        return null;\n    }\n\n    public async storeUser(user: User | null): Promise<void> {\n        const logger = this._logger.create(\"storeUser\");\n        if (user) {\n            logger.debug(\"storing user\");\n            const storageString = user.toStorageString();\n            await this.settings.userStore.set(this._userStoreKey, storageString);\n        }\n        else {\n            this._logger.debug(\"removing user\");\n            await this.settings.userStore.remove(this._userStoreKey);\n        }\n    }\n\n    /**\n     * Removes stale state entries in storage for incomplete authorize requests.\n     */\n    public async clearStaleState(): Promise<void> {\n        await this._client.clearStaleState();\n    }\n}\n","{\n  \"name\": \"oidc-client-ts\",\n  \"version\": \"2.2.3\",\n  \"description\": \"OpenID Connect (OIDC) & OAuth2 client library\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com:authts/oidc-client-ts.git\"\n  },\n  \"homepage\": \"https://github.com/authts/oidc-client-ts#readme\",\n  \"license\": \"Apache-2.0\",\n  \"main\": \"dist/umd/oidc-client-ts.js\",\n  \"types\": \"dist/types/oidc-client-ts.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/types/oidc-client-ts.d.ts\",\n      \"import\": \"./dist/esm/oidc-client-ts.js\",\n      \"require\": \"./dist/umd/oidc-client-ts.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"authentication\",\n    \"oauth2\",\n    \"oidc\",\n    \"openid\",\n    \"OpenID Connect\"\n  ],\n  \"scripts\": {\n    \"build\": \"node scripts/build.js && npm run build-types\",\n    \"build-types\": \"tsc -p tsconfig.build.json && api-extractor run\",\n    \"clean\": \"git clean -fdX dist lib *.tsbuildinfo\",\n    \"prepack\": \"npm run build\",\n    \"test\": \"tsc && jest\",\n    \"typedoc\": \"typedoc\",\n    \"lint\": \"eslint --max-warnings=0 --cache .\",\n    \"prepare\": \"husky install\"\n  },\n  \"dependencies\": {\n    \"crypto-js\": \"^4.1.1\",\n    \"jwt-decode\": \"^3.1.2\"\n  },\n  \"devDependencies\": {\n    \"@microsoft/api-extractor\": \"^7.18.10\",\n    \"@testing-library/jest-dom\": \"^5.16.5\",\n    \"@types/crypto-js\": \"^4.0.2\",\n    \"@types/jest\": \"^29.2.3\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.8.0\",\n    \"@typescript-eslint/parser\": \"^5.8.0\",\n    \"esbuild\": \"^0.17.0\",\n    \"eslint\": \"^8.5.0\",\n    \"eslint-plugin-testing-library\": \"^5.0.1\",\n    \"http-proxy-middleware\": \"^2.0.1\",\n    \"husky\": \"^8.0.1\",\n    \"jest\": \"^29.3.1\",\n    \"jest-environment-jsdom\": \"^29.3.1\",\n    \"jest-mock\": \"^29.3.1\",\n    \"lint-staged\": \"^13.0.0\",\n    \"ts-jest\": \"^29.0.3\",\n    \"typedoc\": \"^0.24.1\",\n    \"typescript\": \"~4.8.4\",\n    \"yn\": \"^5.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=12.13.0\"\n  },\n  \"lint-staged\": {\n    \"*.{js,jsx,ts,tsx}\": \"eslint --cache --fix\"\n  }\n}\n","// @ts-expect-error avoid enabling resolveJsonModule to keep build process simple\nimport { version } from \"../package.json\";\n\n/**\n * @public\n */\nexport const Version: string = version;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));","\"use strict\";",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Utf8;\n\n}));",null,"/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["Log","CryptoJS","sha256","Base64","Utf8","jwt_decode","logger","_a","InvalidCharacterError","message","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split","e"],"version":3,"file":"index.32d56147.js.map","sourceRoot":"/__parcel_source_root/"}